define(["exports","./c_tslib","./e_ui_page_files_router","./c_pap-events_manual_upload_select_upload_folder","./c_file_uploader_utils","./c_hive_schemas_web-modal-activity","./c_file_uploader_action_logger","./c_file_uploader_actions_adapter","metaserver/static/js/modules/constants/trademark","./e_core_exception","./c_core_i18n","./c_core_exception_info","./c_file_uploader_types","./c_src_sink_index","./c_apex-metrics_src_types","./c_data_slice","./c_data_store","metaserver/static/js/modules/constants/global_file_upload","./c_folder_dialog_async","./c_growth_ui_teams_web_actions_logger_events","./c_sharing_actions_cdm_new_folder_modal_actions","./c_sharing_browse_exports","./c_sharing_default_permissions_web_uploads_exports","./e_edison","./c_core_notify","./c_sharing_default_permissions_web_uploads_utils","./c_data_action_creators_index","./c_sharing_async_share_modal_util"],(function(e,t,o,a,r,s,i,l,n,d,c,p,h,u,g,_,m,S,U,f,E,I,T,A,F,C,y,v){"use strict";class R{constructor(){this.fileCount=0,this.files={},this.filesInProgress=0,this.firstBlockUploadStartTime=void 0,this.numChunks=0,this.numFiles=0,this.numFilesCancelled=0,this.numFilesIgnoredOrRejected=0,this.numFilesErrored=0,this.retriedBlocks=0,this.retriedCommits=0,this.size=0,this.startTime=void 0,this.useBatchCommit=!1}}var O;!function(e){e.START="START",e.APPEND="APPEND",e.COMMIT="COMMIT",e.FINISH="FINISH",e.VISIBLE="VISIBLE"}(O||(O={}));const b=(e,t)=>{d.reportException({err:new Error("currentBatch was undefined in an upload eventHandler, logging was dropped"),severity:"non-critical",tags:["web_upload","upload_logging"],exc_extra:{uploadId:t,eventType:e}})},M=e=>r.shouldUseHybridUploader()&&r.shouldUseSessionUploadForFile(e.uploadItemMetadata.bytes)?"session_api":"legacy_api";class P{constructor(e){this.blockStartTimes=new Map,this.batches={},this.fileBatch={},this.user=e,this.amisLogger=new L}init(){l.ActionsAdapter.on("setUser",(({user:e})=>{this.user=e})),l.ActionsAdapter.on("filesAdded",(({uploadItems:e})=>{if(0===e.length)return;const t=performance.now(),o=new R;this.batches[this.currentBatchId]=o,o.fileCount=e.length,o.filesInProgress=e.length,e.forEach((e=>{const a={fileUpload:this.convertItemToFileUpload(e,{batchId:this.currentBatchId}),uploadItemMetadata:e,addTime:t,uploadStartTime:t,commitStartTime:0,commitEndTime:0,currentStep:O.START,retriedBlocks:0,retriedCommits:0,chunks:[]};o.files[e.id]=a,this.fileBatch[e.id]=this.currentBatchId,this.amisLogger.recordFileUploadStart(a,o)})),this.amisLogger.recordBatchStart(o)})),l.ActionsAdapter.on("beforeUpload",(({uploadItems:e})=>{if(e.length>0){const t=this.fileBatch[e[0].id],o=t&&this.batches[t];if(t&&o)return void(o.startTime=performance.now())}b("beforeUpload")})),l.ActionsAdapter.on("uploadItemDequeue",(({uploadItem:e})=>{const{currentFile:t}=this.getBatchAndCurrentFileFromItemId(e.id);t?this.reportUploadActionToHive(i.WebUploadActionEvent.UPLOAD_DEQUEUE,t):b("uploadItemDequeue",e.id)})),l.ActionsAdapter.on("blockUploadStart",(({blob:e,uploadItem:t})=>{const o=performance.now(),{currentBatch:a,currentFile:r}=this.getBatchAndCurrentFileFromItemId(t.id);a&&r?(a.firstBlockUploadStartTime||(a.firstBlockUploadStartTime=o),this.blockStartTimes.set(e,o),(null==r?void 0:r.currentStep)===O.START&&(a.files[t.id]=Object.assign(Object.assign({},r),{uploadStartTime:o,currentStep:O.APPEND}),this.reportUploadActionToHive(i.WebUploadActionEvent.UPLOAD_START_SUCCESS,r,{parallelCommit:"true",timeInStep:(o-r.addTime).toString()}))):b("blockUploadStart",t.id)})),l.ActionsAdapter.on("blockUploadEnd",(({blob:e,uploadItem:t,totalRetryCount:o})=>{const{currentBatch:a,currentFile:r}=this.getBatchAndCurrentFileFromItemId(t.id),s=this.blockStartTimes.get(e);a&&r?(s&&(null==r||r.chunks.push({duration:performance.now()-s,sizeBytes:e.size}),a.size+=e.size,a.numChunks++,this.blockStartTimes.delete(e)),r&&(r.retriedBlocks+=o||0),a.retriedBlocks+=o||0):b("blockUploadEnd",t.id)})),l.ActionsAdapter.on("filesCommitting",(({uploadItems:e})=>{const t=performance.now();e.forEach((e=>{const{currentBatch:o,currentFile:a}=this.getBatchAndCurrentFileFromItemId(e.id);o&&a?(null==a?void 0:a.currentStep)===O.APPEND&&(o.files[e.id]=Object.assign(Object.assign({},a),{commitStartTime:t,currentStep:O.COMMIT}),this.reportUploadActionToHive(i.WebUploadActionEvent.UPLOAD_APPEND_SUCCESS,a,{parallelCommit:"true",timeInStep:(t-a.uploadStartTime).toString()})):b("filesCommitting",e.id)}))})),l.ActionsAdapter.on("fileUploaded",(({uploadItem:e,totalRetryCount:t,useBatchCommit:o})=>{const{currentBatch:a,currentFile:r}=this.getBatchAndCurrentFileFromItemId(e.id),s=performance.now();a&&r?(a.numFiles++,a.retriedCommits+=t||0,a.useBatchCommit=o,(null==r?void 0:r.currentStep)===O.COMMIT&&(r.retriedCommits=t||0,r.commitEndTime=s,r.currentStep=O.FINISH,this.reportUploadActionToHive(i.WebUploadActionEvent.UPLOAD_SUCCESS,r,Object.assign(Object.assign({parallelCommit:"true",timeInStep:(s-r.commitStartTime).toString(),overallTime:(s-r.addTime).toString()},this.getFileUploadMetrics(r)),this.getRetriesData(r))),S.WEB_UPLOAD_OPTIMISTIC_UPDATES&&this.logVisuallyCompleteManually(r,a),this.amisLogger.recordFileUploadSuccess(r,a),this.amisLogger.recordFileUploadPerformance(r,a)),this.reportMetricsIfBatchEmpty(r)):b("fileUploaded",e.id)})),l.ActionsAdapter.on("fileCanceled",(({uploadItems:e,uploadFiles:t})=>{var a;(null!==(a=null!=e?e:t)&&void 0!==a?a:[]).forEach((e=>{var t;const a=null!==(t=e.uploadId)&&void 0!==t?t:e.id,{currentBatch:r,currentFile:s}=this.getBatchAndCurrentFileFromItemId(a);s&&r&&(r.numFilesCancelled++,this.reportUploadActionToHive(i.WebUploadActionEvent.UPLOAD_CANCELED,s,Object.assign({},this.getRetriesData(s))),this.reportUploadActionToHive(o.WebUserActionLogEvent.CANCEL_UPLOAD_CLICK,s),this.reportMetricsIfBatchEmpty(s),this.amisLogger.recordFileUploadCancel(s,r))}))})),l.ActionsAdapter.on("error",(e=>{const{uploadItem:t,totalRetryCount:o,errorType:a}=e,{currentBatch:s,currentFile:l}=this.getBatchAndCurrentFileFromItemId(t.id),n=i.getErrorClass(a);this.reportUploadError(e,Object.assign({},this.getRetriesData(l,a,o))),s&&l?(!n||n!==r.UploadErrorClass.IGNORED&&n!==r.UploadErrorClass.REJECTED?s.numFilesErrored++:s.numFilesIgnoredOrRejected++,l.errorLogged||(this.amisLogger.recordFileUploadError(l,s,a,n),l.errorLogged=!0),this.reportMetricsIfBatchEmpty(l)):b("error")})),l.ActionsAdapter.on("boltUpdate",(({ts:e})=>{this.logVisuallyCompleteFromBolt()}))}reportBatchUploadMetrics(e,t){const{size:o,startTime:a,firstBlockUploadStartTime:r,numFiles:s,numChunks:l,retriedBlocks:n,retriedCommits:d,useBatchCommit:c}=t;if(0===s)return;const p=performance.now();if(!a||!r)return;if(Object.keys(t.files).filter((e=>t.files[e].errorLogged)).length)return;const h=p-a,u=r-a,g=Object.values(t.files).reduce(((e,t)=>e+this.countBlocksForSize(t.uploadItemMetadata.bytes)),0);i.logUploadAction({user:this.user,action:i.WebUploadActionEvent.UPLOAD_METRICS,batchId:e,num_files:s,extra:Object.assign(Object.assign({numBlocks:String(g),numChunks:String(l),retriedBlocks:String(n),retriedCommits:String(d),fullDuration:h.toFixed(0),timeToFirstBlockUpload:u.toFixed(0)},this.calculateAggregateTimings(t)),{batchSize:String(o),sizeNormalizedSpeed:(o/(h/1e3)).toFixed(0),batchMbps:(o/125e3/(h/1e3)).toFixed(4),useBatchCommit:c?"true":"false"})})}getFileUploadMetrics(e){const t=performance.now(),o=e.uploadItemMetadata.bytes,a=t-e.addTime,r=e.uploadStartTime-e.addTime,s=e.commitStartTime-e.uploadStartTime,i=this.calculateThreadUploadTime(e),l=e.commitEndTime-e.commitStartTime;return{numBlocks:String(this.countBlocksForSize(o)),numChunks:String(e.chunks.length),retriedBlocks:String(e.retriedBlocks),retriedCommits:String(e.retriedCommits),fullDuration:a.toFixed(0),preUploadDuration:r.toFixed(0),blockUploadWallDuration:s.toFixed(0),blockUploadThreadDuration:i.toFixed(0),commitDuration:l.toFixed(0),fileSize:String(o),effectiveUploadSpeed:(o/(s/1e3)).toFixed(0),sizeNormalizedSpeed:(o/(a/1e3)).toFixed(0),fileMbps:(o/125e3/(a/1e3)).toFixed(4),apiUsed:M(e)}}reportUploadError({errorMessage:e,errorMethodSource:t,totalRetryCount:o,useBatchCommit:a,errorCode:r,errorType:s,uploadItem:n},d){const c=_.getTargetSurface(m.getStoreForUpload().getState()),p="none"===c?h.UploadMethod.CHOOSER:h.UploadMethod.DRAG,{currentFile:u}=this.getBatchAndCurrentFileFromItemId(n.id);let g=null==u?void 0:u.fileUpload;g||(g=l.convertUploadItem(n));let S=Object.assign(Object.assign({},d),{errorCode:r.toString(),targetSurface:c,useBatchCommit:String(Boolean(a))});e&&(S=Object.assign(Object.assign({},S),{errorMessage:e})),t&&(S=Object.assign(Object.assign({},S),{errorMethodSource:t})),o&&(S=Object.assign(Object.assign({},S),{totalRetryCount:String(o)})),i.logUploadAction({user:this.user,action:i.WebUploadActionEvent.UPLOAD_FAILURE,upload:g,errorType:s,upload_method:p,extra:S})}setBatchId(e){this.currentBatchId=e}getRetriesData(e,t,o=0){if(!e)return{autoRetryCount:"0",manualRetryCount:"0"};const a=e.uploadItemMetadata.manualRetryCount.toString()||"0",r=e.retriedBlocks+e.retriedCommits+o,s={autoRetryCount:r?r.toString():"0",manualRetryCount:a};return t&&(s.failure_reason=t),s}calculateAggregateTimings(e){let t=0,o=0,a=0,r=0;return Object.values(e.files).forEach((e=>{t+=e.uploadStartTime-e.addTime,o+=e.commitEndTime-e.commitStartTime,a+=e.commitStartTime-e.uploadStartTime,r+=this.calculateThreadUploadTime(e)})),{preUploadDuration:t.toFixed(0),commitDuration:o.toFixed(0),blockUploadWallDuration:a.toFixed(0),blockUploadThreadDuration:r.toFixed(0)}}calculateThreadUploadTime(e){return e.chunks.map((e=>e.duration)).reduce(((e,t)=>e+t),0)}convertItemToFileUpload(e,t){return l.convertUploadItem(e,t)}countBlocksForSize(e){return Math.ceil(e/4194304)}reportUploadActionToHive(e,t,o={},a){const r=this.batches[t.fileUpload.batchId];o=Object.assign(Object.assign({},o),{apiUsed:M(t)}),i.logUploadAction({user:this.user,action:e,num_files:null==r?void 0:r.fileCount,upload:t.fileUpload,errorType:a,extra:o})}cleanupBatch(e){const t=this.batches[e];t&&(Object.keys(t.files).forEach((e=>{delete this.fileBatch[e]})),delete this.batches[e])}reportMetricsIfBatchEmpty(e){var t;const o=null===(t=null==e?void 0:e.fileUpload)||void 0===t?void 0:t.batchId;if(o&&this.batches[o]){const e=this.batches[o];e.filesInProgress--,e.fileCount>0&&e.filesInProgress<=0&&(this.reportBatchUploadMetrics(o,e),this.amisLogger.recordBatchFinish(e))}}logVisuallyCompleteFromBolt(){Object.entries(this.batches).forEach((([e,t])=>{if(!t)return;let o=!0;Object.values(t.files).forEach((t=>{t.currentStep===O.FINISH?(t.currentStep=O.VISIBLE,this.reportUploadActionToHive(i.WebUploadActionEvent.UPLOAD_VISUALLY_COMPLETE,t,{batchId:e})):o=!1})),o&&this.cleanupBatch(e)}))}logVisuallyCompleteManually(e,t){t&&e?e.currentStep===O.FINISH&&(e.currentStep=O.VISIBLE,this.reportUploadActionToHive(i.WebUploadActionEvent.UPLOAD_VISUALLY_COMPLETE,e,{batchId:e.fileUpload.batchId}),this.cleanupBatchIfLoggingDone(e.fileUpload.batchId)):b("fileUploaded",e.fileUpload.uploadId)}cleanupBatchIfLoggingDone(e){const t=this.batches[e];if(!t)return;Object.values(t.files).every((e=>e.currentStep===O.VISIBLE))&&this.cleanupBatch(e)}getBatchAndCurrentFileFromItemId(e){const t=this.fileBatch[e];if(!t)return{};const o=this.batches[t];return{currentBatch:o,currentFile:null==o?void 0:o.files[e]}}}class L{constructor(){this.ns="web_file_actions"}recordFileUploadStart(e,t){u.getMetricsReporter().createStats({ns:this.ns,name:"upload/upload_start"},this.getFileUploadMetricTags(e,t)).record(1)}recordFileUploadSuccess(e,t){u.getMetricsReporter().createStats({ns:this.ns,name:"upload/upload_success"},this.getFileUploadMetricTags(e,t)).record(1)}recordFileUploadCancel(e,t){u.getMetricsReporter().createStats({ns:this.ns,name:"upload/upload_cancel"},this.getFileUploadMetricTags(e,t)).record(1)}recordFileUploadError(e,t,o,a){u.getMetricsReporter().createStats({ns:this.ns,name:"upload/upload_error"},Object.assign({errorType:o,errorClass:a?a.toString():"UNKNOWN"},this.getFileUploadMetricTags(e,t))).record(1)}recordFileUploadPerformance(e,t){const o=e.commitEndTime-e.uploadStartTime,a=e.uploadItemMetadata.bytes/125/o;u.getMetricsReporter().createStats({ns:this.ns,name:"upload/upload_speed"},this.getFileUploadMetricTags(e,t)).recordDuration(a,g.TimeUnit.MILLISECONDS)}recordBatchStart(e){u.getMetricsReporter().createStats({ns:this.ns,name:"upload/upload_batch_start"},this.getBatchUploadMetricTags(e)).record(1)}recordBatchFinish(e){if(u.getMetricsReporter().createStats({ns:this.ns,name:"upload/upload_batch_finish"},Object.assign({state:this.getBatchFinalState(e)},this.getBatchUploadMetricTags(e))).record(1),e.numFiles===e.fileCount&&e.startTime){const t=performance.now()-e.startTime,o=e.size/125/t;u.getMetricsReporter().createStats({ns:this.ns,name:"upload/upload_batch_speed"},Object.assign({},this.getBatchUploadMetricTags(e))).recordDuration(o,g.TimeUnit.MILLISECONDS)}}getBatchFinalState(e){const{numFiles:t,numFilesCancelled:o,numFilesErrored:a,numFilesIgnoredOrRejected:r,fileCount:s}=e;return t+o+r>=s?"COMPLETED":t>0&&a>0?"COMPLETED_PARTIALLY":0===t&&a>0?"FAILED":"UNKNOWN"}getFileUploadMetricTags(e,t){var o;return{uploader:r.getUploadSchedulerType(),apiUsed:M(e),sizeBucket:this.getUploadSizeBucket(null===(o=null==e?void 0:e.uploadItemMetadata)||void 0===o?void 0:o.bytes),isSingleFile:(1===(null==t?void 0:t.fileCount)).toString()}}getBatchUploadMetricTags(e){return{uploader:r.getUploadSchedulerType(),isSingleFile:(1===(null==e?void 0:e.fileCount)).toString(),sizeBucket:this.getUploadSizeBucket(null==e?void 0:e.size)}}getUploadSizeBucket(e){const t=1048576,o=1073741824;return e<=t?"1MB":e<=4194304?"4MB":e<=16777216?"16MB":e<=67108864?"64MB":e<=262144e3?"250MB":e<=o?"1GB":e<=4294967296?"4GB":e<=17179869184?"16GB":e<=53687091200?"50GB":"OVER50GB"}}var w;function N(e){return{class:"manual_upload",action:"upload",object:"file",properties:e}}e.UploaderOverQuotaModalContexts=void 0,(w=e.UploaderOverQuotaModalContexts||(e.UploaderOverQuotaModalContexts={})).UNKNOWN="unknown",w.WENT_OQ_DURING_UPLOAD="went_oq_during_upload",w.ALREADY_OQ_DRAG_AND_DROP="already_oq_drag_and_drop",w.ALREADY_OQ_CLICK_BUTTON="already_oq_upload_button",w.LOCKED_TEAM_DRAG_AND_DROP="locked_team_drag_and_drop",w.LOCKED_TEAM_CLICK_BUTTON="locked_team_click_button";const D={};function B({eventState:e,metadata:t}){"start"===e&&(D[t.batch_id_string]=t),o.logEvent({class:"manual_upload",action:"upload",object:"batch",properties:{eventState:e,failedCount:"failed_count"in t?t.failed_count:void 0,cancelCount:"cancel_count"in t?t.cancel_count:void 0,successCount:"success_count"in t?t.success_count:void 0,totalFileSize:t.total_file_size,itemCount:t.item_count,batchIdString:t.batch_id_string,isFolder:t.is_folder,actionScreen:t.actionScreen,actionElement:t.actionElement?t.actionElement:void 0,taskTrackingIdString:t.task_tracking_id_string}})}function k(e,t,o,a){const s=_.getFilesForBatch(t(),e);let i=0,l=0,n=0;const c=a||0;let p;if(s.forEach((e=>{e.status===r.FileStatusType.COMPLETE&&i++,e.status===r.FileStatusType.FAILED&&l++,e.status===r.FileStatusType.CANCELLED&&n++})),i+l+n<s.size&&!o)return;p=l?"failed":n||o?"canceled":"success";const h=D[e];h||d.reportException({err:new Error("logged a batch end event without first logging a start event for that batch"),severity:"non-critical",tags:["web_upload","upload_logging"],exc_extra:{batchId:e}}),B({eventState:p,metadata:Object.assign({failed_count:l,cancel_count:n+c,success_count:i,total_file_size:0,item_count:s.size,batch_id_string:e,is_folder:!1,actionScreen:"browse_screen",actionElement:null,task_tracking_id_string:""},h)})}const x=(e,t,a)=>{const r=o.selectedFiles$1(t()).keySeq().toList().push(e);a(y.selectFilesByFqPath({fqPathsToSelect:r.toArray()}))},W=({folderMetadata:e})=>new o.File({bytes:0,direct_blockserver_link:"",ext:"",file_id:e.id,href:"",fq_path:e.path_display,event_type:0,icon:e.icon,is_cloud_doc:!1,is_dir:!0,is_in_team_folder_tree:!1,is_in_vault_folder:!1,is_locked:!1,is_lockholder:!1,is_symlink:!1,is_unmounted:!1,ns_id:0,ns_path:e.path_lower,read_only:!1,revision_id:"",sjid:0,sort_key:"",thumbnail_url_tmpl:"",ts:Date.now()/1e3,type:0,isDeleted:!1,is_versionable:!0,has_automated_rule:!1,target_ns:0}),z=({file:e,metadata:t})=>{var a;return new o.File({bytes:e.fileSize,direct_blockserver_link:"",ext:null!==(a=e.name.split(".")[1])&&void 0!==a?a:"",file_id:t.id,href:"",fq_path:t.path_display,event_type:1,icon:t.icon,is_cloud_doc:!1,is_dir:!1,is_in_team_folder_tree:!1,is_in_vault_folder:t.is_in_vault_folder||!1,is_locked:!1,is_lockholder:!1,is_symlink:!1,is_unmounted:!1,ns_id:e.ns_id,ns_path:t.path_lower,read_only:!1,revision_id:t.rev,sjid:0,sort_key:"",thumbnail_url_tmpl:"",ts:Date.now()/1e3,type:1,isDeleted:!1,is_versionable:!0,has_automated_rule:!1,target_ns:0})},j=1e4,V=["1password","abbu","agilekeychain","aplibrary","app","band","cmproj","dvdproj","fcpbundle","gameproj","graffle","imovielibrary","imovieproject","itlp","key","logic","logicx","lpdf","lrdata","mindnode","mindnode","mpkg","numbers","pages","photolibrary","rcproject","rtfd","screenflow","scriv","sketch","theater","xcodeproj","xd","ydevice","bundle","framework","plugin","kext","pkg"];const H=2e3,G=10;function K(e,t,o,a){const r=a[a.length-1];if(!r)return[{ts:o,bytesUploaded:e,uploadSize:t}];if(o-r.ts<H)return a;const s=function(e,t,o,a){if(e.uploadSize>a)return{type:"snapshots_invalid"};{const a=o-e.bytesUploaded,r=t-e.ts;return{type:"snapshots_valid",bytesPerSecond:a>0?Math.ceil(a/(r/1e3)):void 0}}}(a[0],o,e,t),i={ts:o,bytesUploaded:e,uploadSize:t,bytesPerSecond:"snapshots_valid"===s.type&&s.bytesPerSecond||r.bytesPerSecond};return"snapshots_invalid"===s.type?[i]:[...a.slice(Math.max(a.length-G-1,0)),i]}const q=()=>({upload:c.intl.formatMessage({id:"HudAZo",defaultMessage:"Upload"}),fileUploadError:c.intl.formatMessage({id:"q9Pk1n",defaultMessage:"This folder or empty file could not be uploaded because of browser limitations. Try zipping up the content before uploading it, or use the Dropbox desktop client to sync it."}),fileIsPackageError:c.intl.formatMessage({id:"+X+iho",defaultMessage:"This file is a package file and can’t be uploaded directly. To upload a package file via the web, try zipping it first."}),serverError:c.intl.formatMessage({id:"9b4XvT",defaultMessage:"Something went wrong while uploading this file. There was a server error during the upload request."}),invalidCharacterError:c.intl.formatMessage({id:"rNoDTo",defaultMessage:"Something went wrong while uploading this file. The filename contains an invalid character."})}),Q=new class{constructor(){this.uploadSnapshots=[],this.hasInit=!1,this.convertUploadItemWithUser=(e,t={})=>{const o=_.getUser(this.store.getState()).id;return l.convertUploadItem(e,Object.assign({userId:o},t))},this._createHandlers=({chooseDestination:e,isContentManager:a,autoTeamGroupId:s,getBrowseContext:l,handleClickNewFolder:n,uploadConsumerInterface:c})=>({handleFilesAdded:(e,t)=>{const a={};for(const t of e)a[t.dest]=null;const n=_.getUser(this.store.getState()),d=_.getTargetSurface(this.store.getState()),p="none"===d?h.UploadMethod.CHOOSER:h.UploadMethod.DRAG,u=[],g=[],m=[],S=e=>"#.url"===e.name,U=e=>null==e.fileSize,f=e=>V.includes(o.file_extension(e.name))&&e.fileSize%34==0;for(const t of e)U(t)&&u.push(t),f(t)&&g.push(t),S(t)&&m.push(t);for(const e of u){this.store.dispatch(_.uploadActionCreators.addNewFailedFile({file:e,errorType:r.UploadErrorType.EMPTY_OR_FOLDER,errorMessage:this.strings.fileUploadError}));const t=_.getUploadById(this.store.getState(),e.uploadId);i.logUploadAction({user:n,action:i.WebUploadActionEvent.UPLOAD_FAILURE,upload:t,upload_method:p,extra:{targetSurface:d}}),o.logEvent(N({eventState:"failed",fileSize:null==t?void 0:t.fileSize,fileType:t&&r.getFileType(t),batchIdString:null==t?void 0:t.batchId,uploadId:null==t?void 0:t.uploadId}))}for(const e of g){this.store.dispatch(_.uploadActionCreators.addNewFailedFile({file:e,errorType:r.UploadErrorType.PACKAGE_FILE,errorMessage:this.strings.fileIsPackageError}));const t=_.getUploadById(this.store.getState(),e.uploadId);i.logUploadAction({user:n,action:i.WebUploadActionEvent.UPLOAD_FAILURE,upload:t,upload_method:p,extra:{targetSurface:d}}),o.logEvent(N({eventState:"failed",fileSize:null==t?void 0:t.fileSize,fileType:t&&r.getFileType(t),batchIdString:null==t?void 0:t.batchId,uploadId:null==t?void 0:t.uploadId}))}for(const e of m){this.store.dispatch(_.uploadActionCreators.addNewFailedFile({file:e,errorType:r.UploadErrorType.INVALID_EXTENSION,errorMessage:this.strings.fileUploadError}));const t=_.getUploadById(this.store.getState(),e.uploadId);i.logUploadAction({user:n,action:i.WebUploadActionEvent.UPLOAD_FAILURE,upload:t,upload_method:p,extra:{targetSurface:d}}),o.logEvent(N({eventState:"failed",fileSize:null==t?void 0:t.fileSize,fileType:t&&r.getFileType(t),batchIdString:null==t?void 0:t.batchId,uploadId:null==t?void 0:t.uploadId}))}e=e.filter((e=>!S(e)&&!f(e)&&!U(e))),u.length&&this.cancelUploads({files:u},c||!1),g.length&&this.cancelUploads({files:g},c||!1),m.length&&this.cancelUploads({files:m},c||!1),this.store.dispatch(_.uploadActionCreators.queueUploads(e));if(!r.getFileUploadsWithStatus(_.getFileList(this.store.getState()),[r.FileStatusType.SET_PERMISSIONS]).length)return void(t&&t());const E=this.canSeeMultiFolderPermissionsAtUploadModal(),I=s&&l&&this.canSeeNewFolderViaUploadModal(),T=()=>{this.readyFilesForUpload(),this._startNextUploadIfAvailable(),null==t||t()};E||I?C.getDefaultPermissionForFolderUploads(n.id).then((e=>{const o=e!==C.DefaultPermissionForFolderUploadsOptions.INHERIT;E&&o?this.showMultiFolderPermissionsAtUploadModal(c||!1,t,l):I&&o?this.showCdmNewFolderViaUploadModal(s,l,c||!1,t):T()})):T()},handleUploadProgress:(e,t,o)=>{if(e&&!_.isUploadCancelled(this.store.getState(),e.uploadId)){const a=e.percentUploaded,s=e,i=_.getFileList(this.store.getState());if(null===s)return void(e.uploadId in this.reportedFileUploadExceptions||(d.reportException({err:new Error("uploadSelectors.getCurrentUpload(this.store.getState()) is null"),severity:p.SEVERITY.NONCRITICAL}),this.reportedFileUploadExceptions[e.uploadId]=!0));const l=a/100*s.fileSize,n=l+function(e){return e.reduce(((e,t)=>(t.status===r.FileStatusType.COMPLETE?e+=t.fileSize:t.status===r.FileStatusType.UPLOADING&&(e+=t.percentUploaded/100*t.fileSize),e)),0)}(i.filter((e=>e.uploadId!==s.uploadId))),c=r.calculateSizeOfUploads(i,[r.FileStatusType.COMPLETE,r.FileStatusType.PENDING,r.FileStatusType.UPLOADING]),h=this.calculateBytesPerSecond(n,c),u=i.count((e=>e.status===r.FileStatusType.PENDING||e.status===r.FileStatusType.UPLOADING)),g=void 0!==h?(c-n)/h+u:void 0,m=void 0!==h?(s.fileSize-l)/h+1:void 0,U=i.get(e.uploadId);if((null==U?void 0:U.percentUploaded)===a&&U&&m&&Math.floor(U.numSecondsLeft)===Math.floor(m))return;S.SMOOTH_UPLOAD_PROGRESS_BAR&&!this.progressBarTimer&&(this.progressBarTimer=window.setInterval((()=>{const e=this.store.getState();_.isUploadInProgress(e)||(window.clearInterval(this.progressBarTimer),this.progressBarTimer=void 0);const t=_.getInflightUploads(e),o=[];t.forEach((e=>{o.push(e)})),this.store.dispatch(_.uploadActionCreators.setUploadsProgressBar(o))}),30)),this.store.dispatch(_.uploadActionCreators.setUploadProgress({uploadId:s.uploadId,percentComplete:a,numSecondsLeft:t?g:void 0,secondsLeftForFile:m,isHangingUpload:!1,lastProgressTime:o}))}},handleFileUploaded:(e,t,a)=>{if(!_.isUploadCancelled(this.store.getState(),e.uploadId)){this.store.dispatch(_.uploadActionCreators.completeUpload({uploadId:e.uploadId})),o.attemptLogDismissRecommendationTooltip("upload_tooltip","file_uploaded"),this.activationStore.dispatch(o.activationActions.updateRecommendedFeature({featureRecommendationType:"upload",isCompleted:!0}));const s=o.unsortedFiles(this.store.getState()),i=o.paths_are_equal(o.path$1(this.store.getState()),e.dest),l=o.joinPathWithFileName({fqPath:o.normalize(e.dest),fileName:e.name}),n=i?s.has(l):void 0;S.WEB_UPLOAD_OPTIMISTIC_UPDATES&&(t||(null==a?void 0:a.length))&&(({fileMetadata:e,folderMetadata:t,getState:a,dispatch:r,fileUpload:s})=>{const i=o.path$1(a());let l=o.unsortedFiles(a());(null==e?void 0:e.path_lower)&&(null==e?void 0:e.path_display)&&o.paths_are_equal(i,o.parent_dir(e.path_display))&&(l=l.set(e.path_display,z({file:s,metadata:e})),r(y.setUnsortedFiles({unsortedFiles:l})),r(o.filesChanged(s.dest?s.dest:"/")),x(e.path_display,a,r)),null==t||t.forEach((e=>{var t,s;if(!e.path_lower||!e.path_display)return;o.parent_dir(e.path_lower)===i.toLowerCase()&&(l=l.set(e.path_display,W({folderMetadata:e})),r(y.setUnsortedFiles({unsortedFiles:l})),x(e.path_display,a,r));const n=o.tree(a()),d=n.getClosestExistingChildFromKey(null!==(t=e.path_display)&&void 0!==t?t:"");if(d.key===e.path_display)return;const c=null!==(s=n.getChildItems(d))&&void 0!==s?s:o.immutableExports.List();r({type:o.ActionTypes.ADD_SUB_FOLDERS,payload:{folder:d,subFolders:c.push(new o.FolderTreeItem({key:e.path_display,label:e.name,icon:"folder",canExpand:!0}))}})}))})({fileUpload:e,fileMetadata:t,folderMetadata:a||[],getState:this.store.getState,dispatch:this.store.dispatch}),o.logEvent(N({eventState:"success",fileSize:e.fileSize,fileType:r.getFileType(e),uploadId:e.uploadId,batchIdString:e.batchId,uploadOverwrote:i?n?"yes":"no":"not_known"})),o.UserSurvey.trackEvent("upload_item","browse"),r.logMediaFileToUserSurvey(e.name),r.uploadSuccessEmitEventIsOn()&&o.publishEvent(o.CampaignEvents.FILE_UPLOAD_SUCCESS,{context:{file_name:e.name,file_extension:o.file_extension(e.name),file_path:T.getFilePath(e),overwrote:n?"true":"false"}}),this._startNextUploadIfAvailable()}},handleUploadComplete:()=>{_.getFileList(this.store.getState()).valueSeq().filter((e=>e.status===r.FileStatusType.SET_PERMISSIONS)).toArray().length||this.store.dispatch(_.uploadActionCreators.resetTeamAccessLevel()),this.resetCreatedFolders(),this.resetFoldersWithError(),this.resetUploadSnapshots()},handleError:(e,t,a)=>{e&&(r.uploadFailureEmitEventIsOn()&&o.publishEvent(o.CampaignEvents.FILE_UPLOAD_FAILURE,{context:{file_name:e.name,upload_error_type:t,file_extension:o.file_extension(e.name),file_path:T.getFilePath(e)}}),_.getFileList(this.store.getState()).has(e.uploadId)?this.store.dispatch(_.uploadActionCreators.handleUploadError({uploadId:e.uploadId,errorType:t,errorMessage:a})):this.store.dispatch(_.uploadActionCreators.addNewFailedFile({file:e,errorType:t,errorMessage:a})),t!==r.UploadErrorType.OVER_QUOTA_ERROR&&t!==r.UploadErrorType.LOCKED_TEAM_ERROR||this.store.dispatch(_.uploadActionCreators.setHasOverquotaError(!0)),this._startNextUploadIfAvailable())},handleBeforeUpload:(e,a,i,l)=>{if(!e)return;const n=this.strings.serverError,d=this.getUploadPath();if(this.canShowUploadModal()&&s){const o=T.getRootPath(e,d),r=a;a=()=>t.__awaiter(this,void 0,void 0,(function*(){yield this.createSharedFolder(e,s),this.addCreatedFolder(o),r()}))}if(_.getConfirmedFSWBatchIds(this.store.getState()).filter((t=>e.batchId===t)).length)return void a();let c={path:e.dest,to_path:e.name,fsw_request:"check",_subject_uid:e.userId};this.ajaxInterceptor&&(c=this.ajaxInterceptor.interceptUploadPrecheck(c));return o.SilentBackgroundRequest$1({url:"/cmd/upload_precheck",data:c,success:t=>{this.handleUploadPrecheckSuccess(t,e,a,n,l,i)},error:t=>{this.manuallySetInErrorState({file:e,errorType:r.UploadErrorType.UPLOAD_PRECHECK_ERROR,errorMessage:n,extra:{type:"ajax-error",errorCode:t.status.toString(),errorText:t.responseText,requestId:t.getResponseHeader("x-dropbox-request-id")||""}})}})}}),this.chooseFiles=(e,t,o)=>{const a=_.getPath(this.store.getState());e.chooseFiles().then((({items:e,errors:s})=>{this.logUploadAttempts({chooserType:r.ChooserType.FILE,uploadPath:a,items:e,errors:s,upload_method:h.UploadMethod.CHOOSER,actionElement:t,taskTrackingId:o})}))},this.chooseFolder=(e,t,o)=>{const a=_.getPath(this.store.getState());e.chooseFolder().then((({items:e,errors:s})=>{this.logUploadAttempts({chooserType:r.ChooserType.FOLDER,uploadPath:a,items:e,errors:s,upload_method:h.UploadMethod.CHOOSER,actionElement:t,taskTrackingId:o})}))},this.logUploadAttempts=({chooserType:e,uploadPath:a,items:s,errors:n,upload_method:d,actionElement:c,taskTrackingId:p})=>t.__awaiter(this,void 0,void 0,(function*(){const t=function(e){return e.reduce(((e,{bytes:t})=>e+t),0)}(s),h=r.getCurrentActionScreen();s.forEach((e=>{const t=l.convertUploadItem(e);o.logEvent(N({eventState:"start",fileSize:t.fileSize,fileType:r.getFileType(t),batchIdString:this.currentBatchId,uploadId:t.uploadId,actionElement:c||void 0,actionScreen:h,taskTrackingIdString:p}))})),i.logUploadAction({user:_.getUser(this.store.getState()),action:i.WebUploadActionEvent.UPLOAD_ATTEMPT,chooser_type:e,upload_method:d,num_files:s.length,num_invalid_files:n.length,uploadPath:a,total_file_size:t,batchId:this.currentBatchId}),B({eventState:"start",metadata:{total_file_size:t,item_count:s.length,is_folder:e===r.ChooserType.FOLDER||e===r.ChooserType.FILE_FOLDER,batch_id_string:this.currentBatchId,actionElement:c,actionScreen:h,task_tracking_id_string:p}})})),this.reportedFileUploadExceptions={},this.resetCreatedFolders(),this.resetFoldersWithError(),this.store=m.getStoreForUpload(),this.activationStore=o.getStoreForActivation(),this.strings=q()}get currentBatchId(){return this._currentBatchId}_test_only_set_store(e){this.store=e}init({chooseDestination:e=!1,isContentManager:a=!1,rootNSIDForCM:s,autoTeamGroupId:h,getBrowseContext:u,handleClickNewFolder:g,uploadConsumerInterface:m}){const{handleFilesAdded:S,handleUploadProgress:U,handleFileUploaded:f,handleUploadComplete:E,handleError:I,handleBeforeUpload:T}=this._createHandlers({chooseDestination:e,autoTeamGroupId:h,getBrowseContext:u,handleClickNewFolder:g,uploadConsumerInterface:m});this.hasInit=!0,l.ActionsAdapter.on("beforeUpload",(({uploadItems:e,beforeUploadComplete:o})=>t.__awaiter(this,void 0,void 0,(function*(){const t=(e,t)=>new Promise((o=>{T(this.convertUploadItemWithUser(e,{batchId:t}),(()=>o({uploadCanceled:!1})),m,(()=>o({uploadCanceled:!0})))})),a=[];let r=0;for(;r<e.length;){if((yield t(e[r],this.currentBatchId)).uploadCanceled){const t=e.slice(r).map((e=>this.convertUploadItemWithUser(e)));this.store.dispatch(_.uploadActionCreators.setUploadsCancelling(t)),this.store.dispatch(_.uploadActionCreators.cancelUploads(t)),r=e.length}else a.push(e[r]),r++}o({items:a,errors:[]}),this.hangingUploadTimer||(this.hangingUploadTimer=window.setInterval((()=>{const e=this.store.getState();_.isUploadInProgress(e)||(window.clearInterval(this.hangingUploadTimer),this.hangingUploadTimer=void 0);const t=performance.now(),o=_.getInflightUploads(e),a=[];o&&(o.forEach((e=>{t-e.lastProgressTime>j&&!e.isHangingUpload&&(a.push(e),i.logUploadAction({user:_.getUser(this.store.getState()),action:i.WebUploadActionEvent.UPLOAD_HANGING,upload:e})),e.isHangingUpload&&t-e.lastLogTime>5e4&&(a.push(e),i.logUploadAction({user:_.getUser(this.store.getState()),action:i.WebUploadActionEvent.UPLOAD_HANGING,upload:e}))})),this.store.dispatch(_.uploadActionCreators.setUploadsHanging(a)))}),j))})))),l.ActionsAdapter.on("filesAdded",(({uploadItems:e,allUploadItems:a,filesAddedComplete:s,chooseDestination:i,actionScreen:n})=>t.__awaiter(this,void 0,void 0,(function*(){this._currentBatchId=r.generateBatchId(),this.uploadMetricsReporter.setBatchId(this.currentBatchId);const d=(e,a)=>t.__awaiter(this,void 0,void 0,(function*(){yield new Promise((t=>{S(e.map((e=>this.convertUploadItemWithUser(e,{batchId:this.currentBatchId}))),t)}));const t=r.getFileUploadsWithStatus(_.getFileList(this.store.getState()),[r.FileStatusType.PENDING,r.FileStatusType.UPLOADING]).map((e=>`${e.dest}/${e.name}`)),i=a.filter((e=>t.includes(`${o.normalize(e.parentPath)}/${e.destPath}`)));s(i)}));if(i&&0!==e.length){const t=()=>{l.ActionsAdapter.emit("fileCanceled",{uploadItems:e})},o=()=>{const t=_.getPath(this.store.getState()),o=e.map((e=>Object.assign(Object.assign({},e),{parentPath:t}))),r=a.map((e=>Object.assign(Object.assign({},e),{parentPath:t})));d(o,r)};this.asyncShowChooseFolderModal(t,o,g,n)}else d(e,a)})))),l.ActionsAdapter.on("fileUploaded",(({uploadItem:e,useBatchCommit:t,fileMetadata:o,folderMetadata:a})=>{const r=this.convertUploadItemWithUser(e);f(r,o,a),k(r.batchId||"",this.store.getState),this.onNextFileUploadComplete&&(this.onNextFileUploadComplete(),this.onNextFileUploadComplete=null)})),l.ActionsAdapter.on("uploadProgress",(({uploadItem:e,lastProgressTimestamp:t})=>{U(this.convertUploadItemWithUser(e),!0,t)})),l.ActionsAdapter.on("error",(({uploadItem:e,errorType:t,loggingOnly:a})=>{var s;!function(e,t,o){switch(e){case r.UploadErrorType.BLOCKS_MISSING_ERROR:d.reportException({err:new Error("Blocks missing from web upload."),tags:["web_upload","blocks_missing"],severity:p.SEVERITY.CRITICAL,exc_extra:{filename:t,size:o}});break;case r.UploadErrorType.UPLOAD_BLOCK_ERROR:d.reportException({err:new Error("Server error encountered when trying to upload a block."),tags:["web_upload","upload_block_error"],severity:p.SEVERITY.CRITICAL,exc_extra:{filename:t,size:o}});break;case r.UploadErrorType.CHUNKS_NOT_ENABLED_ERROR:d.reportException({err:new Error("Chunks not enabled."),tags:["web_upload","chunks_not_enabled_error"],severity:p.SEVERITY.CRITICAL,exc_extra:{filename:t,size:o}});break;case r.UploadErrorType.SERVER_RESPONSE_ERROR:d.reportException({err:new Error("Server response error."),tags:["web_upload","server_response_error"],severity:p.SEVERITY.CRITICAL,exc_extra:{filename:t,size:o}});break;case r.UploadErrorType.HASHES_NOT_EQUAL_ERROR:d.reportException({err:new Error("Client and server hashes are not equal."),tags:["web_upload","hashes_not_equal"],severity:p.SEVERITY.CRITICAL,exc_extra:{filename:t,size:o}});break;case r.UploadErrorType.CLIENT_HASH_DIGEST_ERROR:d.reportException({err:new Error("Client hash digest error."),tags:["web_upload","client_hash_digest_error"],severity:p.SEVERITY.CRITICAL,exc_extra:{filename:t,size:o}});break;case r.UploadErrorType.FILE_READER_NULL_RESULT_ERROR:d.reportException({err:new Error("File reader null result error."),tags:["web_upload","file_reader_null_result_error"],severity:p.SEVERITY.USER_ERROR,exc_extra:{filename:t,size:o}});break;case r.UploadErrorType.COMMIT_READINESS_ERROR:d.reportException({err:new Error("Commit readiness error."),tags:["web_upload","commit_readiness_error"],severity:p.SEVERITY.CRITICAL,exc_extra:{filename:t,size:o}})}}(t,o.filename(e.destPath),e.bytes);const{batchId:i}=null!==(s=_.getUploadById(this.store.getState(),e.id))&&void 0!==s?s:{};i&&k(i,this.store.getState);const h=l.convertUploadItem(e);if(o.logEvent(N({eventState:"failed",fileSize:h.fileSize,fileType:r.getFileType(h),uploadId:h.uploadId,batchIdString:h.batchId})),!a){const o=this.convertUploadItemWithUser(e),a=function(e){switch(e){case r.UploadErrorType.OVER_QUOTA_ERROR:return c.intl.formatMessage({id:"fnG2Ew",defaultMessage:"This file can’t be uploaded because you are over your storage quota. If you believe this message to be in error, try refreshing the page."});case r.UploadErrorType.LOCKED_TEAM_ERROR:return c.intl.formatMessage({id:"tQ1bJN",defaultMessage:"Can’t upload. Your team no longer has full use of {trademark_business} features."},{trademark_business:n.TRADEMARK_BUSINESS});case r.UploadErrorType.FILE_SIZE_ERROR:return c.intl.formatMessage({id:"4SqdmQ",defaultMessage:"This file is too large to upload using the Dropbox website. Please use the desktop client."});case r.UploadErrorType.HTTP_ERROR:return c.intl.formatMessage({id:"eIIEty",defaultMessage:"Something went wrong while uploading this file. There was a server error during the upload request."});case r.UploadErrorType.CONNECTION_ERROR:return c.intl.formatMessage({id:"Lp9J2f",defaultMessage:"Something went wrong while uploading this file. Check your connection to the internet and try again."});case r.UploadErrorType.FOLDER_SAFARI:return c.intl.formatMessage({id:"CeMx7Q",defaultMessage:"Can’t upload folders in Safari. Upload the files separately or try another browser."});case r.UploadErrorType.BLOCKS_MISSING_ERROR:case r.UploadErrorType.CHUNKS_NOT_ENABLED_ERROR:case r.UploadErrorType.BLOCK_INDEX_ERROR:case r.UploadErrorType.BLOCK_EMPTY_ERROR:case r.UploadErrorType.BLOB_EMPTY_ERROR:case r.UploadErrorType.BLOB_MISSING_ERROR:case r.UploadErrorType.CLIENT_HASH_DIGEST_ERROR:case r.UploadErrorType.FILE_READER_NULL_RESULT_ERROR:return c.intl.formatMessage({id:"RVsdJD",defaultMessage:"Something went wrong while uploading this file."});case r.UploadErrorType.COMMIT_HTTP_ERROR:case r.UploadErrorType.UPLOAD_BLOCK_ERROR:case r.UploadErrorType.SERVER_RESPONSE_ERROR:case r.UploadErrorType.SERVER_TOKEN_EMPTY_ERROR:case r.UploadErrorType.SERVER_TOKENS_MISSING_ERROR:case r.UploadErrorType.SERVER_HASH_RESPONSE_ERROR:case r.UploadErrorType.BLOCK_RUNTIME_ID_MISSING_ERROR:case r.UploadErrorType.CLIENT_HASH_EMPTY_ERROR:case r.UploadErrorType.SERVER_HASH_EMPTY_ERROR:case r.UploadErrorType.HASHES_NOT_EQUAL_ERROR:return c.intl.formatMessage({id:"eIIEty",defaultMessage:"Something went wrong while uploading this file. There was a server error during the upload request."});default:return c.intl.formatMessage({id:"RVsdJD",defaultMessage:"Something went wrong while uploading this file."})}}(t);null==m||m.setItemRetriable(o.uploadKitDest),I(o,t,a)}})),l.ActionsAdapter.on("uploadComplete",(()=>{E()})),this.uploadMetricsReporter=this.createMetricsReporter()}createMetricsReporter(){const e=new P(_.getUser(this.store.getState()));return e.init(),e}canShowUploadModal(){return"work"===_.getUser(this.store.getState()).role}canSeeNewFolderViaUploadModal(){const e=_.getUser(this.store.getState()),t=_.getFileList(this.store.getState()),o=this.getUploadPath(),a=r.uploadContainsFolder(t,o),s=r.isMultifolderUpload(t,o),i=r.isUploadInTmf(t,e);return this.canShowUploadModal()&&!s&&a&&"work"===e.role&&e.is_cdm_member&&!i}canSeeMultiFolderPermissionsAtUploadModal(){const e=_.getUser(this.store.getState()),t=_.getFileList(this.store.getState()),o=this.getUploadPath(),a=!r.uploadContainsFolder(t,o),s=r.isMultifolderUpload(t,o),i=r.isUploadInTmf(t,e);return!_.getShouldSuppressNextPermissionAtUploadWarning(this.store.getState())&&(s||a)&&this.canShowUploadModal()&&"work"===e.role&&e.is_cdm_member&&!i}resetCreatedFolders(){this.createdFolders=[]}resetUploadSnapshots(){this.uploadSnapshots=[]}addCreatedFolder(e){this.createdFolders.includes(e)||this.createdFolders.push(e)}resetFoldersWithError(){this.foldersWithError=[]}addFolderWithError(e){this.isFolderWithError(e)||this.foldersWithError.push(e)}isFolderWithError(e){return this.foldersWithError.includes(e)}readyFilesForUpload(){const e=r.getFileUploadsWithStatus(_.getFileList(this.store.getState()),[r.FileStatusType.SET_PERMISSIONS]);this.store.dispatch(_.uploadActionCreators.readyUploads(e))}cancelStagedUploads(e){const t=r.getFileUploadsWithStatus(_.getFileList(this.store.getState()),[r.FileStatusType.SET_PERMISSIONS]);this.cancelUploads({files:t},e)}asyncShowChooseFolderModal(e,t,a,i){const l=_.getUser(this.store.getState());if(!l)return;const n=(e,t)=>{this.setPath({path:e}),void 0!==t&&this.setFolderNsId({folderNsId:t})},d=c=>{U.showFolderDialog({modalName:s.ModalName.UPLOAD,user:l,title:r.folderModalTitle,primaryActionLabel:this.strings.upload,primaryActionOnClick:()=>{i&&o.logEvent({class:"manual_upload",action:"select",object:"upload_confirm",properties:{actionScreen:i,actionElement:"modal"}})},onSuccess:(e,a)=>{n(e,a),t(),o.TeamsWebActionsLogger.log("upload_choose_dest_clk_confirm",r.getUploadLocationMetadataToLog(l,_.getPath(this.store.getState())))},onCancel:e,getFolderContents:c?o.getFolderContents:o.getFolderContentsWithCache,handleClickNewFolder:a?a(d):void 0,initialPath:c})};d()}showCdmNewFolderViaUploadModal(e,t,a,s){const i=_.getUser(this.store.getState());if(!i)return;const l=this.getUploadPath(),n=r.getFileUploadsWithStatus(_.getFileList(this.store.getState()),[r.FileStatusType.SET_PERMISSIONS]),d=n[0],c=d.chooserType,p=t(),h=l.split("/"),u=o.normalize(d.dest).split("/"),g=h.concat(u[h.length]).join("/");if(n.length){const e=T.PermissionsAtUploadStats.createCounter(T.PermissionsAtUploadAmpMetrics.PAU_FILE_UPLOAD_PROCESSED,{type:T.PermissionsAtUploadModalTypes.SINGLE});e.increment(n.length),e.record()}const m=e=>{e&&this.manuallySetInErrorState({file:d,errorType:r.UploadErrorType.PERMISSIONS_AT_UPLOAD_ERROR,errorMessage:e,startNextUploadIfAvailable:!1}),this.cancelStagedUploads(a),s&&s()},S=()=>{this.readyFilesForUpload(),this._startNextUploadIfAvailable(),s&&s()};I.asyncShowCdmNewFolderViaUploadModal((t=>{this.handleCreateFolderWithCdmNewFolderViaUploadModal(c,l,i,e,m,S,t)}),p,g,i,(()=>{this.handleCancelWithCdmNewFolderViaUploadModal(c,m)}),(()=>{o.TeamsWebActionsLogger.log(f.TeamSpaceTsdAccessVisibilityEvents.PERMISSIONS_AT_UPLOAD_MODAL_OPEN,{parent_ns_id:p.currentNSID,folder_level:o.normalize(p.currentFQPath).split("/").length,number_of_files:1}),T.PermissionsAtUploadStats.log(T.PermissionsAtUploadAmpMetrics.PAU_MODAL_DISPLAY,{type:T.PermissionsAtUploadModalTypes.SINGLE}),this.handleCdmNewFolderViaUploadModalShow(c)}))}showMultiFolderPermissionsAtUploadModal(e,t,a){const s=this.getUploadPath(),i=o.Viewer.get_viewer(),l=s?r.TeamAccessLevel.INHERIT:r.TeamAccessLevel.WRITER;this.store.dispatch(_.uploadActionCreators.addTeamLevelAccess({path:s,accessLevel:l})),I.asyncShowMultiFolderPermissionsAtUploadModal({cancelUploads:t=>{this.cancelUploads({files:t},e)},onCancel:()=>{this.cancelStagedUploads(e),t&&t()},onClose:()=>{this.setIsPermissionsAtUploadModalOpen({isPermissionsAtUploadModalOpen:!1})},onShow:e=>{if(!_.isPermissionsAtUploadModalOpen(this.store.getState())&&e.length&&(o.TeamsWebActionsLogger.log("upload_choose_audience_impression_multi",{batch_id:e[0].batchId}),T.PermissionsAtUploadStats.log(T.PermissionsAtUploadAmpMetrics.PAU_MODAL_DISPLAY,{type:T.PermissionsAtUploadModalTypes.MULTI})),a){const t=a();o.TeamsWebActionsLogger.log(f.TeamSpaceTsdAccessVisibilityEvents.PERMISSIONS_AT_UPLOAD_MODAL_OPEN,{parent_ns_id:t.currentNSID,folder_level:o.normalize(t.currentFQPath).split("/").length,number_of_files:e.length})}},onSuccess:(e=[])=>{if(a){const t=a();o.TeamsWebActionsLogger.log(f.TeamSpaceTsdAccessVisibilityEvents.PERMISSIONS_AT_UPLOAD_CLICK,{parent_ns_id:t.currentNSID,folder_level:o.normalize(t.currentFQPath).split("/").length,file_list:e.map((e=>({access:e.teamAccessLevel,type:e.file.type}))),number_of_files:e.length})}this.readyFilesForUpload(),this._startNextUploadIfAvailable(),t&&t()},teamName:i.team_name,uploadPath:s}).catch((()=>{this.setIsPermissionsAtUploadModalOpen({isPermissionsAtUploadModalOpen:!1}),t&&t()})),this.setIsPermissionsAtUploadModalOpen({isPermissionsAtUploadModalOpen:!0})}getUploadPath(){return o.normalize(_.getPath(this.store.getState()))}getTeamAccessLevel(e){const t=T.getFilePath(e);return _.getTeamAccessLevel(this.store.getState(),t)}createSharedFolder(e,o){return t.__awaiter(this,void 0,void 0,(function*(){const t=_.getUser(this.store.getState());if(!t)return;const a=this.getTeamAccessLevel(e),s=this.getUploadPath();try{const r=()=>{T.PermissionsAtUploadStats.log(T.PermissionsAtUploadAmpMetrics.PAU_SHARED_FOLDER_CREATE)};yield T.createSharedFolder({user:t,uploadPath:s,file:e,teamAccessLevel:a,createdFolders:this.createdFolders,foldersWithError:this.foldersWithError,autoTeamGroupId:o,onAttempt:r})}catch(t){const o=this.strings.serverError;this.manuallySetInErrorState({file:e,errorType:r.UploadErrorType.PERMISSIONS_AT_UPLOAD_ERROR,errorMessage:o});const a=T.getRootPath(e,s);this.addFolderWithError(a)}}))}handleUploadPrecheckSuccess(e,t,a,s,i,l){let n,c=!1,p=!1;try{n=JSON.parse(e),c=!(!n||!n.failure_details),p=!(!n||!n.error||"invalid_character"!==n.error)}catch(o){return d.reportException({err:o,tags:["web_upload"],severity:"non-critical"}),void this.manuallySetInErrorState({file:t,errorType:r.UploadErrorType.UPLOAD_PRECHECK_ERROR,errorMessage:s,extra:{type:"json-parse",errorText:o.toString(),fswData:e}})}if(p){const e=this.strings.invalidCharacterError;this.manuallySetInErrorState({file:t,errorType:r.UploadErrorType.UPLOAD_PRECHECK_INVALID_CHAR_ERROR,errorMessage:e})}else if(c){const e=this.canSeeMultiFolderPermissionsAtUploadModal(),s=this.canSeeNewFolderViaUploadModal(),l=n.failure_details.filter((t=>!_.getShouldSuppressNextPermissionAtUploadWarning(this.store.getState())&&((!e||"action_missing_parent"!==t.id||!_.getTeamAccessLevelsDefinition(this.store.getState()).hasDefinitions())&&((!s&&!e||"action_commit_to_tsd_root"!==t.id)&&!_.getConfirmedFSWs(this.store.getState()).includes(t.id)))));if(0===l.length)return void a();const d=l.map((e=>e.id));o.logFileUploadFSWReturned({uid:t.userId,file_name:t.name,upload_id:t.uploadId,filtered_fsw_ids:d.join(","),all_fsw_ids:n.failure_details.map((e=>e.id)).join(",")});const c=()=>{i&&i()},p=()=>{a(),this.store.dispatch(_.uploadActionCreators.confirmFSW({fswIds:l.map((e=>e.id)),batchId:t.batchId}))};o.TeamsWebActionsLogger.log("upload_warning_impression",Object.assign({file_type:t.chooserType},r.getFSWMetadataToLog(d)));const h=()=>{this.handleFileSystemWarningsModalFinalAccept(t.chooserType,p)},u=()=>{this.handleFileSystemWarningsModalAbortAction(t.chooserType,c)};o.showFileSystemWarningsModal({confirmText:this.strings.upload,fsws:l,onFinalAccept:h,onAbortAction:u})}else this.store.dispatch(_.uploadActionCreators.confirmFSW({fswIds:[],batchId:t.batchId})),a()}handleFileSystemWarningsModalFinalAccept(e,t){o.TeamsWebActionsLogger.log("upload_warning_clk_confirm",{file_type:e}),t()}handleFileSystemWarningsModalAbortAction(e,t){o.TeamsWebActionsLogger.log("upload_warning_clk_cancel",{file_type:e}),t()}handleCreateFolderWithCdmNewFolderViaUploadModal(e,t,a,s,i,l,{folderName:n,isConfidential:d,autoTeamGroupAccessLevel:c}){o.TeamsWebActionsLogger.log("upload_choose_audience_click",{file_type:e,audience:d?"individuals":"team"});const p=()=>{T.asyncShowDefaultPermissionAtUploadIfNeeded({user:a,files:[{type:o.FileTypes.FOLDER,teamAccessLevel:d||c!==o.ACCESS_LEVEL.OWNER&&c!==o.ACCESS_LEVEL.WRITER?r.TeamAccessLevel.NO_ACCESS:r.TeamAccessLevel.WRITER}]})};if(d){const o=()=>{this.handleShareViaUploadModalShow(e)},r=(t,o)=>{this.handleShareViaUploadShareButtonClick(e,t,o),p()},s=()=>{this.handleShareViaUploadModalCancel(e,i)},d=()=>{this.handleShareViaUploadModalClose(e,o)},c=e=>{e&&F.Notify.error(e)};document.addEventListener("modalOpened",o),v.asyncShowNewFolderShareModal({defaultBasePath:t,initialContentName:n,isNonUserRelativeContext:this.isContentManager,onCancel:s,onClose:d,onSetContentNameAndSendShareFail:c,onShareClick:r,onSuccessSharing:l,shareAsConfidential:!0,shareButtonLabelOverride:this.strings.upload,shouldCloseImmediately:!0,shouldSuppressRedirectToBrowse:!0,user:a})}else T.PermissionsAtUploadStats.log(T.PermissionsAtUploadAmpMetrics.PAU_FOLDER_ENQUEUED_ON_UPLOAD_INIT),this.setIsPermissionsAtUploadModalOpen({isPermissionsAtUploadModalOpen:!1}),c&&E.createTSDPlus1NsfFolder({user:a,pathName:t,folderName:n,autoTeamGroupAccessLevel:c,autoTeamGroupId:s,onPending:p,onComplete:l,onCancel:i})}handleShareViaUploadModalShow(e){o.TeamsWebActionsLogger.log("add_member_permission_impression",{file_type:e})}handleShareViaUploadShareButtonClick(e,t,a){T.PermissionsAtUploadStats.log(T.PermissionsAtUploadAmpMetrics.PAU_FOLDER_ENQUEUED_ON_UPLOAD_INIT),o.TeamsWebActionsLogger.log("add_member_permission_upload",{file_type:e,num_invites:t.length,permission_level:a})}handleShareViaUploadModalClose(e,t){document.removeEventListener("modalOpened",t),this.setIsPermissionsAtUploadModalOpen({isPermissionsAtUploadModalOpen:!1})}handleShareViaUploadModalCancel(e,t){o.TeamsWebActionsLogger.log("add_member_permission_cancel",{file_type:e}),t()}handleCancelWithCdmNewFolderViaUploadModal(e,t){o.TeamsWebActionsLogger.log("upload_choose_audience_cancel",{file_type:e}),this.setIsPermissionsAtUploadModalOpen({isPermissionsAtUploadModalOpen:!1}),t()}handleCdmNewFolderViaUploadModalShow(e){o.TeamsWebActionsLogger.log("upload_choose_audience_impression",{file_type:e}),this.setIsPermissionsAtUploadModalOpen({isPermissionsAtUploadModalOpen:!0})}setPath({path:e,hasPermissionToUploadToFolder:t=!0,isMovingIntoVault:o=!1,targetSurface:a="none"}){e===_.getPath(this.store.getState())&&t===_.hasPermissionToUploadToFolder(this.store.getState())&&o===_.isMovingIntoVault(this.store.getState())&&a===_.getTargetSurface(this.store.getState())||this.store.dispatch(_.uploadActionCreators.setPath({path:e,hasPermissionToUploadToFolder:t,isMovingIntoVault:o,targetSurface:a}))}setFolderNsId({folderNsId:e}){this.store.dispatch(_.uploadActionCreators.setFolderNsId(e))}setUser({user:e}){l.ActionsAdapter.emit("setUser",{user:e}),this.store.dispatch(_.uploadActionCreators.setUser(e))}setNumDraggingFiles({numDraggingFiles:e,isInternalTransfer:t=!1}){this.store.dispatch(_.uploadActionCreators.setNumDraggingFiles({numDraggingFiles:e,isInternalTransfer:t}))}setDropzoneActive({isActive:e}){this.store.dispatch(_.uploadActionCreators.setDropzoneActive({isActive:e}))}setIsPermissionsAtUploadModalOpen({isPermissionsAtUploadModalOpen:e}){this.store.dispatch(_.uploadActionCreators.setIsPermissionsAtUploadModalOpen(e))}setAjaxInterceptor(e){this.ajaxInterceptor=e}setIsContentManager(e=!1){this.isContentManager=e}getFilePath({name:e,dest:t}){return""===t||"/"===t?e:`${t.slice(1)}/${e}`}cancelUploads({files:e},o){return t.__awaiter(this,void 0,void 0,(function*(){this.store.dispatch(_.uploadActionCreators.setUploadsCancelling(e)),o&&o.uploadItems.length&&(yield Promise.all(e.map((({uploadKitDest:e})=>e)).map((e=>t.__awaiter(this,void 0,void 0,(function*(){yield o.cancelUploadItem(e),o.setItemRetriable(e)})))))),this.store.dispatch(_.uploadActionCreators.cancelUploads(e)),o&&o.isUploading&&this._startNextUploadIfAvailable()}))}retryUploads({files:e},t){e.forEach((e=>{t.retryUpload(e.uploadKitDest)})),this.store.dispatch(_.uploadActionCreators.resetUploadProgress(e))}manuallySetInErrorState({file:e,errorType:t,errorMessage:a,extra:s,startNextUploadIfAvailable:l=!0}){this.store.dispatch(_.uploadActionCreators.handleUploadError({uploadId:e.uploadId,errorType:t,errorMessage:a}));const n=_.getUploadById(this.store.getState(),e.uploadId),d=_.getTargetSurface(this.store.getState()),c="none"===d?h.UploadMethod.CHOOSER:h.UploadMethod.DRAG;i.logUploadAction({user:_.getUser(this.store.getState()),action:i.WebUploadActionEvent.UPLOAD_FAILURE,upload:n,errorType:t,extra:Object.assign(Object.assign({},s),{targetSurface:d}),upload_method:c}),o.logEvent(N({eventState:"failed",fileSize:e.fileSize,fileType:r.getFileType(e),batchIdString:e.batchId,uploadId:e.uploadId,fileSystemWarning:null==s?void 0:s.fswData})),l&&this._startNextUploadIfAvailable()}_startUpload({file:e}){return this.store.dispatch(_.uploadActionCreators.startUpload({file:e})),!0}cancelPendingFileUploads(e){const t=r.getFileUploadsWithStatus(_.getFileList(this.store.getState()),[r.FileStatusType.SET_PERMISSIONS,r.FileStatusType.PENDING,r.FileStatusType.UPLOADING]);this.cancelUploads({files:t},e),this.store.dispatch(_.uploadActionCreators.resetTeamAccessLevel())}handleUploadButtonClick({folderUpload:t,uploadConsumerInterface:s,actionElement:l,actionScreen:n,source:d,onNextFileUploadComplete:c}){const p=_.getUser(this.store.getState()),u=_.getPath(this.store.getState()),g=r.generateTaskTrackingId();this.store.dispatch(_.uploadActionCreators.setLastFileUploadMethod("upm"));const m=_.getOverQuotaStatus(this.store.getState());if(m!==r.OverQuotaStatusType.NONE&&m!==r.OverQuotaStatusType.BASIC_NEAR_QUOTA){let t={};return o.Viewer.get_viewer().team_is_locked&&(t={forceLocked:!0,context:e.UploaderOverQuotaModalContexts.LOCKED_TEAM_CLICK_BUTTON}),void this.store.dispatch(_.uploadActionCreators.setUploadModalType(Object.assign({type:"OVER_QUOTA_MODAL"},t)))}U.prewarmFolderDialog(),c&&(this.onNextFileUploadComplete=c),t?(this.chooseFolder(s,l,g),i.logUploadAction({user:p,action:o.WebUserActionLogEvent.UPLOAD_FOLDER_CLICK,chooser_type:r.ChooserType.FOLDER,upload_method:h.UploadMethod.CHOOSER,taskTrackingId:g,source:d}),o.TeamsWebActionsLogger.log("upload_folder_clk",r.getUploadLocationMetadataToLog(p,u)),o.logEvent(a.PAP_Select_UploadFolder({actionScreen:n||void 0,actionElement:h.UploadElement.ACTION_BAR,taskTrackingIdString:g}))):(this.chooseFiles(s,l,g),i.logUploadAction({user:p,action:o.WebUserActionLogEvent.UPLOAD_FILES_CLICK,chooser_type:r.ChooserType.FILE,upload_method:h.UploadMethod.CHOOSER,taskTrackingId:g,source:d}),o.TeamsWebActionsLogger.log("upload_file_clk",r.getUploadLocationMetadataToLog(p,u)),o.logEvent(a.PAP_Select_UploadFile({actionScreen:n||void 0,actionElement:h.UploadElement.ACTION_BAR,taskTrackingIdString:g})))}_startNextUploadIfAvailable(){if(_.isPermissionsAtUploadModalOpen(this.store.getState()))return;const e=_.getNextUpload(this.store.getState());null!=e&&(A.assert(e instanceof r.FileUpload,"the nextUpload is not of type FileUpload"),this._startUpload({file:e}))}calculateBytesPerSecond(e,t){var o;return this.uploadSnapshots=K(e,t,Date.now(),this.uploadSnapshots),null===(o=this.uploadSnapshots[this.uploadSnapshots.length-1])||void 0===o?void 0:o.bytesPerSecond}};var Y=Object.freeze({__proto__:null,UploaderActions:Q,updateUploadSnapshots:K});e.PAP_Upload_File=N,e.UploaderActions=Q,e.actions_esnext=Y,e.reportBatchEndStateIfDone=k}));
//# sourceMappingURL=c_file_uploader_clean_actions.js-vflUXAKts.map
