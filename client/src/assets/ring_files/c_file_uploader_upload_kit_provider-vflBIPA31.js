define(["exports","./c_tslib","./e_edison","./c_browse_crypto_subtle_digest","./e_ui_page_files_router","./c_file_uploader_utils","./c_file_uploader_result_type","./c_file_uploader_actions_adapter","./c_csrf","./c_upload_kit_scheduler_types","./c_upload_kit_uploader_context","./c_upload_kit_lib_types","./c_data_store","./c_data_slice","./c_upload_kit_uploader_upload_abort_controller"],(function(e,t,s,i,o,r,a,n,l,u,d,h,c,p,m){"use strict";const f=4194304;function _(e){return new Promise((t=>{const s=new FileReader;s.onloadend=function(e){if(!(null!==e&&e.target&&e.target.result instanceof ArrayBuffer))throw new Error;t(e.target.result)},s.readAsArrayBuffer(e)}))}function y(e){return"locked_team"===e.error?r.UploadErrorType.LOCKED_TEAM_ERROR:r.UploadErrorType.OVER_QUOTA_ERROR}const R={".tag":"undefined_error"},E={".tag":"network_error"},U={".tag":"undefined_files_upload_error"};function g(e){const t={};return e.trim().split(/[\r\n]+/).forEach((e=>{const[s,i]=e.split(/: /);void 0!==s&&void 0!==i&&(t[s.trim()]=i.trim())})),t}class C{constructor({onProgress:e,abortSignal:t}){this.aborting=!1,this.onProgress=e,this.abortSignal=t}executeRpc(e,t,i,r){return s.incrementAjaxCount(),o.incrementAjaxCount(),new Promise(((s,a)=>{var n;const l=new XMLHttpRequest;l.withCredentials=!0,null===(n=this.abortSignal)||void 0===n||n.then((()=>{this.aborting=!0,l.abort()})).catch((()=>{}));const u=()=>o.ApiError.parseResponse(l.status,g(l.getAllResponseHeaders()),l.responseText);l.onreadystatechange=()=>{if(l.readyState===XMLHttpRequest.DONE){if(0===l.status||200===l.status||-1===l.status)return""===l.responseText?a(o.ApiError.parseResponse(0,{},this.aborting?"aborted":"")):s({headers:g(l.getAllResponseHeaders()),result:JSON.parse(l.responseText)});a(u())}},l.onerror=()=>{a(u())},l.upload&&void 0!==this.onProgress&&(l.upload.onprogress=this.onProgress),l.onload=()=>{l.status>=400&&a(u())},l.open("POST",e.toString(),!0);for(const[e,s]of Object.entries(t))l.setRequestHeader(e,s);l.setRequestHeader("Content-Type",r),l.send(i)})).finally((()=>{s.decrementAjaxCount(),o.decrementAjaxCount()}))}executeBinaryRpc(e,t,s,i){return(new o.FetchAsyncTransport).executeBinaryRpc(e,t,s,i)}}function S(e,s){var i;return t.__awaiter(this,void 0,void 0,(function*(){const t=new o.UserApiV2Client;try{const i=yield t.ns("files").rpc("upload_session/start_batch",e,{subjectUserId:s});return a.ok(i)}catch(e){return void 0!==(null===(i=null==e?void 0:e.error)||void 0===i?void 0:i[".tag"])?a.error(e.error,e.raw.status):0===e.raw.status?a.error(E,0,{isRetriable:!0,maxRetries:r.NETWORK_RETRY_ATTEMPTS,isNetworkError:!0}):a.error(R,e.raw.status)}}))}const k={".tag":"concurrent"},v=1e3;function b(e,t,i,o,n,u,d){return new Promise(((h,c)=>{try{const c={_subject_uid:e.toString(),dest:t,name:i,overwrite:"1",reported_total_size:o.toString(),t:l.readCsrfToken()||"",client_root_ns_id:u.toString()};d>0&&(c.last_modified=d.toString());const p=new s.URI({scheme:"https",authority:"www.dropbox.com",path:"/commit_web_upload_by_token",query:c}),m=new XMLHttpRequest;m.withCredentials=!0;const f=()=>{let e;return e=507===m.status?y(m):0===m.status?r.UploadErrorType.CONNECTION_ERROR:r.UploadErrorType.COMMIT_HTTP_ERROR,{type:e}};return m.onreadystatechange=()=>{if(m.readyState===XMLHttpRequest.DONE)if(200===m.status){const e=JSON.parse(m.responseText);"complete"===e.status?h(a.ok({})):h(a.error({type:r.UploadErrorType.HTTP_ERROR,message:e.error,method:"commitBlocks/request.onreadystatechange"},m.status))}else{const e=f();h(a.error(f(),m.status,I(e)))}},m.open("POST",p.toString(),!0),m.setRequestHeader("Content-Type","application/octet-stream"),m.send(JSON.stringify(n)),m}catch(e){return void h(a.error({type:r.UploadErrorType.HTTP_ERROR,message:e.message,method:"commitBlocks/try-catch"},e.raw.status))}}))}const I=e=>{switch(e.type){case r.UploadErrorType.CONNECTION_ERROR:return{isRetriable:!0,maxRetries:r.NETWORK_RETRY_ATTEMPTS,isNetworkError:!0};case r.UploadErrorType.OVER_QUOTA_ERROR:return{isRetriable:!1};default:return{isRetriable:!0,maxRetries:3,isNetworkError:!1}}};function T(e,t,s){return new Promise(((i,n)=>{const l={};s.map((e=>{l[e.id]=e}));const u=[];(function(e,t){const s={entries:t};return(new o.UserApiV2Client).ns("upload_backend").rpc("commit_web_upload_token_batch",s,{subjectUserId:e})})(e,t).then((e=>{var t,s;null===(t=e.completed)||void 0===t||t.forEach((e=>{u.push({uploadItem:l[e.local_identifier],status:{isError:!1}})})),null===(s=e.failed)||void 0===s||s.forEach((e=>{const t=e.status.status;let s=r.UploadErrorType.COMMIT_HTTP_ERROR;if("failure"===t[".tag"]){s=function(e){var t;switch(null===(t=e.failure_reason)||void 0===t?void 0:t[".tag"]){case"invalid_argument":return r.UploadErrorType.COMMIT_INVALID_ARGS;case"too_large_file":case"too_many_blocks":return r.UploadErrorType.FILE_SIZE_ERROR;case"no_write_permission":return r.UploadErrorType.PERMISSIONS_AT_UPLOAD_ERROR;case"insufficient_quota":return r.UploadErrorType.OVER_QUOTA_ERROR;case"file_ignored":return r.UploadErrorType.IGNORED;default:return r.UploadErrorType.COMMIT_HTTP_ERROR}}(t)}u.push({uploadItem:l[e.local_identifier],status:{isError:!0,error:{type:s,method:"commitWebUploadTokenBatch"}}})})),i(a.ok(u))})).catch((e=>{var t,s,o;0!==(null===(t=e.raw)||void 0===t?void 0:t.status)?i(a.error({type:r.UploadErrorType.HTTP_ERROR,message:e.toString(),method:"commitWebUploadTokenBatch/try-catch"},null!==(o=null===(s=e.raw)||void 0===s?void 0:s.status)&&void 0!==o?o:0)):i(a.error({type:r.UploadErrorType.CONNECTION_ERROR,message:e.toString(),method:"commitWebUploadTokenBatch/try-catch"},0,{isRetriable:!0,maxRetries:r.NETWORK_RETRY_ATTEMPTS,isNetworkError:!0}))}))}))}const P=(e,o,n,u,d)=>new Promise((h=>t.__awaiter(void 0,void 0,void 0,(function*(){var c,p;try{let c;if(i.windowHasCryptoSubtleDigest()){const e=yield function(e){return t.__awaiter(this,void 0,void 0,(function*(){let t;try{t=yield _(e)}catch(e){return a.error({type:r.UploadErrorType.FILE_READER_NULL_RESULT_ERROR},0)}try{const e=yield i.encryptArrayBuffer(t),s=function(e){for(;e.endsWith("=");)e=e.slice(0,-1);return e}(btoa(String.fromCharCode.apply(null,new Uint8Array(e))).replace(/\//g,"_").replace(/\+/g,"-"));return s?a.ok({hash:s}):a.error({type:r.UploadErrorType.CLIENT_HASH_EMPTY_ERROR},0)}catch(e){return a.error({type:r.UploadErrorType.CLIENT_HASH_DIGEST_ERROR},0)}}))}(u);if(e.isError)return h(e);c=e.result.hash}const p=new s.URI({scheme:"https",authority:"dl-web.dropbox.com",path:"/put_block_returning_token",query:{owner_id:e.toString(),_subject_uid:e.toString(),t:l.readCsrfToken()||"",reported_block_size:u.size.toString(),num_blocks:Math.ceil(n/u.size).toString(),ns_id_for_routing:o.toString()}}),m=new XMLHttpRequest;m.withCredentials=!0;const f=()=>{let e;return e=507===m.status?y(m):0===m.status?r.UploadErrorType.CONNECTION_ERROR:r.UploadErrorType.UPLOAD_BLOCK_ERROR,{type:e}};return m.onreadystatechange=()=>{if(m.readyState!==XMLHttpRequest.DONE)return;if(0!==m.status&&200!==m.status)return h(a.error({type:r.UploadErrorType.HTTP_ERROR,message:`request status was ${m.status}`,method:"uploadBlock/request.onreadystatechange"},m.status));const e=JSON.parse(m.responseText);return e.token?i.windowHasCryptoSubtleDigest()&&e.block_hash!==c?h(a.error({type:r.UploadErrorType.HASHES_NOT_EQUAL_ERROR},0)):void h(a.ok({token:e.token})):h(a.error({type:r.UploadErrorType.HTTP_ERROR,message:`no token in response, block hash:${e.block_hash}, request status:${m.status}`,method:"uploadBlock/request.onreadystatechange"},0))},m.onerror=()=>{const e=f();e.type!==r.UploadErrorType.CONNECTION_ERROR?h(a.error(e,0)):h(a.error(e,0,{isRetriable:!0,maxRetries:r.NETWORK_RETRY_ATTEMPTS,isNetworkError:!0}))},m.upload&&(m.upload.onprogress=d),m.onload=()=>{m.status>=400&&h(a.error(f(),m.status))},m.open("POST",p.toString(),!0),m.setRequestHeader("Content-Type","application/octet-stream"),m.send(u),m}catch(e){return void h(a.error({type:r.UploadErrorType.HTTP_ERROR,message:e.message,method:"uploadBlock/try-catch"},null!==(p=null===(c=e.raw)||void 0===c?void 0:c.status)&&void 0!==p?p:0))}})))),w=e=>{var t;if(!(e.file&&e.file instanceof File))return 0;const s=Date.now()+864e5,i=null!==(t=e.file.lastModified)&&void 0!==t?t:0;return i.toString().length>=12&&i<s?Math.round(i/1e3):0},A=4194304;class B extends u.UploadScheduler{constructor(e){super(e),this.itemQueue=new Map,this.commitQueue=[],this.availableBlockRequests=8,this.availableCommitRequests=1,this.onCompleteSubscribers=[],this.handleUploadBlocks=e.handleUploadBlocks,this.handleCommitBlocks=e.handleCommitBlocks,this.handleProgress=e.handleProgress,this.handleItemExit=e.handleItemExit,this.handleItemDequeue=e.handleItemDequeue}itemExit(e,t){const s=this.itemQueue.get(e);s&&(s.status=t,this.itemQueue.delete(e),this.handleItemExit(s.info,t))}dispenseChunkData(){if(!this.currentFileChunkReader||this.currentFileChunkReader.isEmpty()||!this.isItemUploading(this.currentFileChunkReader.item.destPath)){const e=Array.from(this.itemQueue.values()).find((e=>"Queued"===e.status&&e.file.size>0));if(!e)return null;this.handleItemDequeue&&this.handleItemDequeue(e.info),this.currentFileChunkReader=new x(e),e.status=u.UploadSchedulerStatus.Uploading}const e=this.currentFileChunkReader.getNextChunk();if(!e)return null;const t=this.currentFileChunkReader.item,s=t.blockTokens.length;return t.blockTokens.push(""),{item:t,chunk:e,blockIndex:s}}commitNext(){return t.__awaiter(this,void 0,void 0,(function*(){if(0===this.availableCommitRequests)return;if(0===this.commitQueue.length)return void(this.isUploading()||this.fireComplete());this.availableCommitRequests--;const e=[],t=[];let s=100;for(;s>0&&this.commitQueue.length>0;){const i=this.commitQueue.shift(),o=this.itemQueue.get(i);if(!o)continue;const{info:r,blockTokens:a,destPath:n}=o;e.push({info:r,tokens:a}),t.push(n),s--}try{(yield this.handleCommitBlocks(e)).forEach((e=>{this.itemExit(e.filePath,e.success?u.UploadSchedulerStatus.Completed:u.UploadSchedulerStatus.Error)}))}catch(e){t.forEach((e=>{this.itemExit(e,u.UploadSchedulerStatus.Error)}))}this.availableCommitRequests++,this.commitNext()}))}queueCommit(e){this.commitQueue.push(e),this.commitNext()}uploadNextBlock(){return t.__awaiter(this,void 0,void 0,(function*(){if(this.availableBlockRequests<=0)return;const e=this.dispenseChunkData();if(!e)return void(this.isUploading()||this.fireComplete());const{item:t,chunk:s,blockIndex:i}=e;let o=0;const r=e=>{if(this.isItemUploading(t.destPath)){const i=Math.min(s.size,t.file.size),r=Math.min(e,i),a=Math.max(r-o,0);o+=a;const n=Math.min(t.totalBytesUploaded+a,t.file.size);t.totalBytesUploaded=n,this.handleProgress(t.info,n)}};this.availableBlockRequests--;try{const e=yield this.handleUploadBlocks(t.info,s,r);this.isItemUploading(t.destPath)&&(r(s.size),t.blockTokens[i]=e,this.isReadyForCommit(t.destPath)&&(t.status=u.UploadSchedulerStatus.Committing,this.queueCommit(t.destPath)))}catch(e){this.itemExit(t.destPath,u.UploadSchedulerStatus.Error)}this.availableBlockRequests++,this.uploadNextBlock()}))}isReadyForCommit(e){const t=this.itemQueue.get(e);if(!t)return!1;const{blockTokens:s,file:i}=t;if(s.every((e=>""!==e))){const e=Math.ceil(i.size/A);return s.length===e}return!1}addFile(e,s,i){return t.__awaiter(this,void 0,void 0,(function*(){this.itemQueue.set(s,{file:e,destPath:s,status:u.UploadSchedulerStatus.Queued,bytesUploaded:0,info:i,blockTokens:[],totalBytesUploaded:0}),this.isUploading()&&this.startUploading()}))}startUploading(){return t.__awaiter(this,void 0,void 0,(function*(){const e=this.onComplete(),t=this.availableBlockRequests;for(let e=0;e<t;e++)this.uploadNextBlock();return e}))}cancelFile(e){return t.__awaiter(this,void 0,void 0,(function*(){this.itemQueue.get(e)&&!this.isReadyForCommit(e)&&this.itemExit(e,u.UploadSchedulerStatus.Stopped)}))}stopUploading(){this.itemQueue.forEach((({destPath:e})=>{this.cancelFile(e)}))}isQueueEmpty(){return 0===this.itemQueue.size}isItemUploading(e){const t=this.itemQueue.get(e);return Boolean(t&&"Uploading"===t.status)}isUploading(){return this.availableBlockRequests<8||this.availableCommitRequests<1}fireComplete(){for(;this.onCompleteSubscribers.length>0;){const e=this.onCompleteSubscribers.shift();e&&e()}}onComplete(){return new Promise((e=>{this.onCompleteSubscribers.push(e)}))}}let x=class{constructor(e){this.currentOffset=0,this.item=e}getNextChunk(){if(this.isEmpty())return null;const e=this.item.file.slice(this.currentOffset,A+this.currentOffset);return this.currentOffset+=A,e}isEmpty(){return this.item.file.size<=this.currentOffset}};const F=4194304;class O extends u.UploadSessionScheduler{constructor(e){super(e),this.itemQueue=new Map,this.commitQueue=[],this.availableBlockRequests=6,this.availableFinishRequests=1,this.onCompleteSubscribers=[],this.handleAppend=e.handleAppend,this.handleFinish=e.handleFinish,this.handleProgress=e.handleProgress,this.handleItemExit=e.handleItemExit,this.currentItemState=null,this.handleItemDequeue=e.handleItemDequeue}itemExit(e,t){const s=this.itemQueue.get(e);s&&(s.status=t,this.itemQueue.delete(e),this.handleItemExit(s.info,t))}dispenseChunkData(){if(null===this.currentItemState||this.currentItemState.fileChunkReader.isEmpty()||!this.isItemUploading(this.currentItemState.item.destPath)){const e=Array.from(this.itemQueue.values()).find((e=>"Queued"===e.status&&e.file.size>0));if(!e)return null;this.handleItemDequeue&&this.handleItemDequeue(e.info);let t=4;e.file.size<=25165824?t=1:e.file.size<=67108864&&(t=2),this.currentItemState={item:e,fileChunkReader:new q(e.file,t)},e.status=u.UploadSchedulerStatus.Uploading}const e=this.currentItemState.fileChunkReader.getNextChunks();if(!e)return null;const t=this.currentItemState.item,s=t.blockIndex;return t.blockIndex+=Math.ceil(e.size/F),{item:t,chunk:e,blockIndex:s}}finishApiV2Items(e){return t.__awaiter(this,void 0,void 0,(function*(){const t=[],s=[];e.forEach((e=>{const{info:i,destPath:o}=e;t.push({info:i}),s.push(o)}));try{(yield this.handleFinish(t)).forEach((e=>{this.itemExit(e.filePath,e.success?u.UploadSchedulerStatus.Completed:u.UploadSchedulerStatus.Error)}))}catch(e){s.forEach((e=>{this.itemExit(e,u.UploadSchedulerStatus.Error)}))}}))}commitNext(){return t.__awaiter(this,void 0,void 0,(function*(){if(0===this.availableFinishRequests)return;if(0===this.commitQueue.length)return void(this.isUploading()||this.fireComplete());this.availableFinishRequests--;const e=[];this.commitQueue.forEach((t=>{const s=this.itemQueue.get(t);s&&e.push(s)}));e.slice(0,1e3).forEach((e=>{const t=this.commitQueue.indexOf(e.destPath);this.commitQueue.splice(t,1)})),e&&(yield this.finishApiV2Items(e)),this.availableFinishRequests++,this.commitNext()}))}queueCommit(e){this.commitQueue.push(e),this.commitNext()}uploadNextBlock(){return t.__awaiter(this,void 0,void 0,(function*(){if(this.availableBlockRequests<=0)return;const e=this.dispenseChunkData();if(!e)return void(this.isUploading()||this.fireComplete());const{item:t,chunk:s,blockIndex:i}=e;let o=0;const r=e=>{if(this.isItemUploading(t.destPath)){const i=Math.min(s.size,t.file.size),r=Math.min(e,i),a=Math.max(r-o,0);o+=a;const n=Math.min(t.visualBytesUploaded+a,t.file.size);t.visualBytesUploaded=n,this.handleProgress(t.info,n)}};this.availableBlockRequests--;try{yield this.handleAppend(t.info,s,i,r),t.confirmedBytesUploaded+=s.size,this.isItemUploading(t.destPath)&&(r(s.size),this.isFileReadyForCommit(t.destPath)&&(t.status=u.UploadSchedulerStatus.Committing,this.queueCommit(t.destPath)))}catch(e){this.itemExit(t.destPath,u.UploadSchedulerStatus.Error)}this.availableBlockRequests++,this.uploadNextBlock()}))}isFileReadyForCommit(e){const t=this.itemQueue.get(e);if(!t)return!1;const{confirmedBytesUploaded:s,file:i}=t;return s>=i.size}addFile(e,s,i){return t.__awaiter(this,void 0,void 0,(function*(){this.itemQueue.set(s,{file:e,destPath:s,status:u.UploadSchedulerStatus.Queued,bytesUploaded:0,info:i,visualBytesUploaded:0,confirmedBytesUploaded:0,blockIndex:0}),this.isUploading()&&this.startUploading()}))}startUploading(){return t.__awaiter(this,void 0,void 0,(function*(){const e=this.onComplete(),t=this.availableBlockRequests;for(let e=0;e<t;e++)this.uploadNextBlock();return e}))}cancelFile(e,s=!1){return t.__awaiter(this,void 0,void 0,(function*(){this.itemQueue.get(e)&&!this.isFileReadyForCommit(e)&&this.itemExit(e,s?u.UploadSchedulerStatus.Stopped:u.UploadSchedulerStatus.Cancelled)}))}stopUploading(){this.itemQueue.forEach((({destPath:e})=>{this.cancelFile(e,!0)}))}isQueueEmpty(){return 0===this.itemQueue.size}isItemUploading(e){const t=this.itemQueue.get(e);return Boolean(t&&"Uploading"===t.status)}isUploading(){return this.availableBlockRequests<6||this.availableFinishRequests<1}fireComplete(){for(;this.onCompleteSubscribers.length>0;){const e=this.onCompleteSubscribers.shift();e&&e()}}onComplete(){return new Promise((e=>{this.onCompleteSubscribers.push(e)}))}}let q=class{constructor(e,t){this.currentOffset=0,this.file=e,this.chunkCount=t}getNextChunks(){const e=this.file.size-this.currentOffset;if(e<=0)return null;const t=Math.floor(e/F);let s;s=t<1?e:t<this.chunkCount?t*F:this.chunkCount*F;const i=this.file.slice(this.currentOffset,s+this.currentOffset);return this.currentOffset+=s,i}isEmpty(){return this.file.size<=this.currentOffset}};const Q=4194304;let N=class extends u.UploadHybridScheduler{constructor(e){super(e),this.itemQueue=new Map,this.commitQueue=[],this.availableBlockRequests=6,this.availableFinishRequests=1,this.onCompleteSubscribers=[],this.handleUploadBlocks=e.handleUploadBlocks,this.handleCommitBlocks=e.handleCommitBlocks,this.handleAppend=e.handleAppend,this.handleFinish=e.handleFinish,this.handleProgress=e.handleProgress,this.handleItemExit=e.handleItemExit,this.currentItemState=null,this.handleItemDequeue=e.handleItemDequeue}itemExit(e,t){const s=this.itemQueue.get(e);s&&(s.status=t,this.itemQueue.delete(e),this.handleItemExit(s.info,t))}dispenseChunkData(){if(null===this.currentItemState||this.currentItemState.fileChunkReader.isEmpty()||!this.isItemUploading(this.currentItemState.item.destPath)){const e=Array.from(this.itemQueue.values()).find((e=>"Queued"===e.status&&e.file.size>0));if(!e)return null;this.handleItemDequeue&&this.handleItemDequeue(e.info);const t=r.shouldUseSessionUploadForFile(e.file.size)?4:1;this.currentItemState={item:e,fileChunkReader:new M(e.file,t)},e.status=u.UploadSchedulerStatus.Uploading}const e=this.currentItemState.fileChunkReader.getNextChunks();if(!e)return null;const t=this.currentItemState.item,s=t.blockIndex;return t.blockIndex+=Math.ceil(e.size/Q),{item:t,chunk:e,blockIndex:s}}commitLegacyItems(e){return t.__awaiter(this,void 0,void 0,(function*(){const t=[],s=[];e.forEach((e=>{const{info:i,destPath:o,blockTokens:r}=e;r&&t.push({info:i,tokens:r}),s.push(o)}));try{(yield this.handleCommitBlocks(t)).forEach((e=>{this.itemExit(e.filePath,e.success?u.UploadSchedulerStatus.Completed:u.UploadSchedulerStatus.Error)}))}catch(e){s.forEach((e=>{this.itemExit(e,u.UploadSchedulerStatus.Error)}))}}))}finishApiV2Items(e){return t.__awaiter(this,void 0,void 0,(function*(){const t=[],s=[];e.forEach((e=>{const{info:i,destPath:o}=e;t.push({info:i}),s.push(o)}));try{(yield this.handleFinish(t)).forEach((e=>{this.itemExit(e.filePath,e.success?u.UploadSchedulerStatus.Completed:u.UploadSchedulerStatus.Error)}))}catch(e){s.forEach((e=>{this.itemExit(e,u.UploadSchedulerStatus.Error)}))}}))}commitNext(){return t.__awaiter(this,void 0,void 0,(function*(){if(0===this.availableFinishRequests)return;if(0===this.commitQueue.length)return void(this.isUploading()||this.fireComplete());this.availableFinishRequests--;const e=[];this.commitQueue.forEach((t=>{const s=this.itemQueue.get(t);s&&e.push(s)}));const t=e.filter((e=>!r.shouldUseSessionUploadForFile(e.file.size))).slice(0,100),s=e.filter((e=>r.shouldUseSessionUploadForFile(e.file.size))).slice(0,1e3);t.forEach((e=>{const t=this.commitQueue.indexOf(e.destPath);this.commitQueue.splice(t,1)})),s.forEach((e=>{const t=this.commitQueue.indexOf(e.destPath);this.commitQueue.splice(t,1)}));const i=t.length>0?this.commitLegacyItems(t):void 0,o=s.length>0?this.finishApiV2Items(s):void 0;yield Promise.all([i,o]),this.availableFinishRequests++,this.commitNext()}))}queueCommit(e){this.commitQueue.push(e),this.commitNext()}uploadNextBlock(){return t.__awaiter(this,void 0,void 0,(function*(){if(this.availableBlockRequests<=0)return;const e=this.dispenseChunkData();if(!e)return void(this.isUploading()||this.fireComplete());const{item:t,chunk:s,blockIndex:i}=e;let o=0;const a=e=>{if(this.isItemUploading(t.destPath)){const i=Math.min(s.size,t.file.size),r=Math.min(e,i),a=Math.max(r-o,0);o+=a;const n=Math.min(t.visualBytesUploaded+a,t.file.size);t.visualBytesUploaded=n,this.handleProgress(t.info,n)}};this.availableBlockRequests--;try{let e;r.shouldUseSessionUploadForFile(t.file.size)?yield this.handleAppend(t.info,s,i,a):e=yield this.handleUploadBlocks(t.info,s,a),t.confirmedBytesUploaded+=s.size,this.isItemUploading(t.destPath)&&(e&&t.blockTokens&&(t.blockTokens[i]=e),this.isFileReadyForCommit(t.destPath)&&(t.status=u.UploadSchedulerStatus.Committing,this.queueCommit(t.destPath)))}catch(e){this.itemExit(t.destPath,u.UploadSchedulerStatus.Error)}this.availableBlockRequests++,this.uploadNextBlock()}))}isFileReadyForCommit(e){const t=this.itemQueue.get(e);if(!t)return!1;const{confirmedBytesUploaded:s,file:i}=t;return s>=i.size}addFile(e,s,i){return t.__awaiter(this,void 0,void 0,(function*(){this.itemQueue.set(s,{file:e,destPath:s,status:u.UploadSchedulerStatus.Queued,bytesUploaded:0,info:i,visualBytesUploaded:0,confirmedBytesUploaded:0,blockIndex:0,blockTokens:[]}),this.isUploading()&&this.startUploading()}))}startUploading(){return t.__awaiter(this,void 0,void 0,(function*(){const e=this.onComplete(),t=this.availableBlockRequests;for(let e=0;e<t;e++)this.uploadNextBlock();return e}))}cancelFile(e,s=!1){return t.__awaiter(this,void 0,void 0,(function*(){this.itemQueue.get(e)&&!this.isFileReadyForCommit(e)&&this.itemExit(e,s?u.UploadSchedulerStatus.Stopped:u.UploadSchedulerStatus.Cancelled)}))}stopUploading(){this.itemQueue.forEach((({destPath:e})=>{this.cancelFile(e,!0)}))}isQueueEmpty(){return 0===this.itemQueue.size}isItemUploading(e){const t=this.itemQueue.get(e);return Boolean(t&&"Uploading"===t.status)}isUploading(){return this.availableBlockRequests<6||this.availableFinishRequests<1}fireComplete(){for(;this.onCompleteSubscribers.length>0;){const e=this.onCompleteSubscribers.shift();e&&e()}}onComplete(){return new Promise((e=>{this.onCompleteSubscribers.push(e)}))}},M=class{constructor(e,t){this.currentOffset=0,this.file=e,this.chunkCount=t}getNextChunks(){const e=this.file.size-this.currentOffset;if(e<=0)return null;const t=Math.floor(e/Q);let s;s=t<1?e:t<this.chunkCount?t*Q:this.chunkCount*Q;const i=this.file.slice(this.currentOffset,s+this.currentOffset);return this.currentOffset+=s,i}isEmpty(){return this.file.size<=this.currentOffset}};class D extends u.UploadHybridScheduler{constructor(e){super(e),this.itemQueue=new Map,this.commitQueue=[],this.availableBlockRequests=6,this.availableFinishRequests=1,this.onCompleteSubscribers=[],this.handleUploadBlocks=e.handleUploadBlocks,this.handleCommitBlocks=e.handleCommitBlocks,this.handleAppend=e.handleAppend,this.handleFinish=e.handleFinish,this.handleProgress=e.handleProgress,this.handleItemExit=e.handleItemExit,this.currentItemState=null,this.handleItemDequeue=e.handleItemDequeue}itemExit(e,t){const s=this.itemQueue.get(e);s&&(s.status=t,this.itemQueue.delete(e),this.handleItemExit(s.info,t))}dispenseChunkData(){if(null===this.currentItemState||this.currentItemState.fileChunkReader.isEmpty()||!this.isItemUploading(this.currentItemState.item.destPath)){const e=Array.from(this.itemQueue.values()).find((e=>"Queued"===e.status&&e.file.size>0));if(!e)return null;this.handleItemDequeue&&this.handleItemDequeue(e.info),this.currentItemState={item:e,fileChunkReader:new FileChunkReader(e.file,4)},e.status=u.UploadSchedulerStatus.Uploading}let e;if(r.shouldUseSessionUploadForFile(this.currentItemState.item.file.size)?this.currentItemState.fileChunkReader.getNextChunks():this.currentItemState.fileChunkReader.getFileChunk(),!e)return null;const t=this.currentItemState.item,s=t.blockIndex;return t.blockIndex+=Math.ceil(e.size/CHUNK_SIZE),{item:t,chunk:e,blockIndex:s}}finishOneShotUploadItems(e){const t=e.map((e=>{const{info:t}=e;return{info:t,tokens:["unused"]}}));this.handleCommitBlocks(t),e.forEach((e=>{const{destPath:t}=e;this.itemExit(t,u.UploadSchedulerStatus.Completed)}))}finishSessionUploadItems(e){return t.__awaiter(this,void 0,void 0,(function*(){const t=[],s=[];e.forEach((e=>{const{info:i,destPath:o}=e;t.push({info:i}),s.push(o)}));try{(yield this.handleFinish(t)).forEach((e=>{this.itemExit(e.filePath,e.success?u.UploadSchedulerStatus.Completed:u.UploadSchedulerStatus.Error)}))}catch(e){s.forEach((e=>{this.itemExit(e,u.UploadSchedulerStatus.Error)}))}}))}commitNext(){return t.__awaiter(this,void 0,void 0,(function*(){if(0===this.availableFinishRequests)return;if(0===this.commitQueue.length)return void(this.isUploading()||this.fireComplete());this.availableFinishRequests--;const e=[];this.commitQueue.forEach((t=>{const s=this.itemQueue.get(t);s&&e.push(s)}));const t=e.filter((e=>!r.shouldUseSessionUploadForFile(e.file.size))),s=e.filter((e=>r.shouldUseSessionUploadForFile(e.file.size))).slice(0,1e3);t.forEach((e=>{const t=this.commitQueue.indexOf(e.destPath);this.commitQueue.splice(t,1)})),s.forEach((e=>{const t=this.commitQueue.indexOf(e.destPath);this.commitQueue.splice(t,1)})),t.length&&this.finishOneShotUploadItems(t),s.length&&(yield this.finishSessionUploadItems(s)),this.availableFinishRequests++,this.commitNext()}))}queueCommit(e){this.commitQueue.push(e),this.commitNext()}uploadNextBlock(){return t.__awaiter(this,void 0,void 0,(function*(){if(this.availableBlockRequests<=0)return;const e=this.dispenseChunkData();if(!e)return void(this.isUploading()||this.fireComplete());const{item:t,chunk:s,blockIndex:i}=e;let o=0;const a=e=>{if(this.isItemUploading(t.destPath)){const i=Math.min(s.size,t.file.size),r=Math.min(e,i),a=Math.max(r-o,0);a;const n=Math.min(t.visualBytesUploaded+a,t.file.size);t.visualBytesUploaded=n,this.handleProgress(t.info,n)}};this.availableBlockRequests--;try{r.shouldUseSessionUploadForFile(t.file.size)?yield this.handleAppend(t.info,s,i,a):yield this.handleUploadBlocks(t.info,s,a),t.confirmedBytesUploaded+=s.size,this.isItemUploading(t.destPath)&&this.isFileReadyForCommit(t.destPath)&&(t.status=u.UploadSchedulerStatus.Committing,this.queueCommit(t.destPath))}catch(e){this.itemExit(t.destPath,u.UploadSchedulerStatus.Error)}this.availableBlockRequests++,this.uploadNextBlock()}))}isFileReadyForCommit(e){const t=this.itemQueue.get(e);if(!t)return!1;const{confirmedBytesUploaded:s,file:i}=t;return s>=i.size}addFile(e,s,i){return t.__awaiter(this,void 0,void 0,(function*(){this.itemQueue.set(s,{file:e,destPath:s,status:u.UploadSchedulerStatus.Queued,bytesUploaded:0,info:i,visualBytesUploaded:0,confirmedBytesUploaded:0,blockIndex:0}),this.isUploading()&&this.startUploading()}))}startUploading(){return t.__awaiter(this,void 0,void 0,(function*(){const e=this.onComplete(),t=this.availableBlockRequests;for(let e=0;e<t;e++)this.uploadNextBlock();return e}))}cancelFile(e,s=!1){return t.__awaiter(this,void 0,void 0,(function*(){this.itemQueue.get(e)&&!this.isFileReadyForCommit(e)&&this.itemExit(e,s?u.UploadSchedulerStatus.Stopped:u.UploadSchedulerStatus.Cancelled)}))}stopUploading(){this.itemQueue.forEach((({destPath:e})=>{this.cancelFile(e,!0)}))}isQueueEmpty(){return 0===this.itemQueue.size}isItemUploading(e){const t=this.itemQueue.get(e);return Boolean(t&&"Uploading"===t.status)}isUploading(){return this.availableBlockRequests<6||this.availableFinishRequests<1}fireComplete(){for(;this.onCompleteSubscribers.length>0;){const e=this.onCompleteSubscribers.shift();e&&e()}}onComplete(){return new Promise((e=>{this.onCompleteSubscribers.push(e)}))}}function z(e,s){return t.__awaiter(this,void 0,void 0,(function*(){return e=d.resolveDuplicates(e),yield function(e,s){return t.__awaiter(this,void 0,void 0,(function*(){e.length&&(yield r.showInvalidFileWarning(e.map((({item:e,error:t})=>({name:o.filename(e.destPath),validationError:t}))),s))}))}(s,0===e.length),function(e){t.__awaiter(this,void 0,void 0,(function*(){e.forEach((e=>{e.file instanceof File&&!h.isChooserFile(e.file)&&!h.isWebkitFile(e.file)&&(e.file.webkitRelativePath="/")}))}))}(e),e}))}function H(e,s){return t.__awaiter(this,void 0,void 0,(function*(){const{response:i}=yield r.newPromiseWithRetries({promiseToTry:()=>function(e,s){return t.__awaiter(this,void 0,void 0,(function*(){const t=[];for(;e>v;){const i=S({num_sessions:v,session_type:k},s);t.push(i),e-=v}const i=S({num_sessions:e,session_type:k},s);t.push(i);const o=yield Promise.all(t);let r=[];for(const e of o){if(e.isError)return e;r=r.concat(e.result.session_ids)}return a.ok(r)}))}(s,e)});return i}))}const L=4194304,W=500;class V extends s.React$1.Component{constructor(){super(...arguments),this.allProcessedFiles=[],this.dequeuedItemIds=new Set,this.onBeforeUpload=e=>new Promise((t=>{n.ActionsAdapter.emit("beforeUpload",{uploadItems:e,beforeUploadComplete:({items:e})=>{t(e)}})})),this.onFilesAdded=(e,t)=>new Promise((s=>{n.ActionsAdapter.emit("filesAdded",{uploadItems:e,allUploadItems:t,filesAddedComplete:s,chooseDestination:this.props.chooseDestination,actionScreen:this.props.actionScreen})})),this.processFiles=(e,s)=>t.__awaiter(this,void 0,void 0,(function*(){let t;s.forEach((({item:e,error:t})=>{n.ActionsAdapter.emit("error",{user:this.props.user,uploadItem:e,errorCode:0,errorType:n.convertValidationError(t),loggingOnly:!0})}));try{t=this.props.processFiles?yield this.props.processFiles(e,s):yield z(e,s)}catch(e){t=[]}const i=e=>{let t;return()=>t||(t=H(this.props.user.id,e),t)};if(r.shouldUseHybridUploader()&&t.some((e=>r.shouldUseSessionUploadForFile(e.bytes)))){let e,s=t.length;t.forEach(((t,o)=>{if(o%W==0){const t=s>W?W:s;s-=W,e=i(t)}t.sessionFetcher=e,t.sessionIndex=o%W})),t[0].sessionFetcher()}return this.allProcessedFiles=[...this.allProcessedFiles,...t],t=yield this.onFilesAdded(t,this.allProcessedFiles),t=yield this.onBeforeUpload(t),this.allProcessedFiles=[],{items:t,errors:s}})),this.onUploadItemDequeue=e=>{this.dequeuedItemIds.has(e.id)||(this.dequeuedItemIds.add(e.id),n.ActionsAdapter.emit("uploadItemDequeue",{uploadItem:e}))},this.nsIdForRouting=e=>{if(this.props.nsIdForRouting)return this.props.nsIdForRouting(e);const t=c.getStoreForUpload().getState(),s=p.getPath(t),i=p.getFolderNsId(t);return""===o.normalize(s)?this.props.user.root_ns_id:null!==i?i:this.props.user.root_ns_id},this.appendBlock=(e,s,l,u)=>t.__awaiter(this,void 0,void 0,(function*(){if(e.sessionId||(yield this.getSessionId(e)),!e.sessionId||void 0===l)throw n.ActionsAdapter.emit("error",{uploadItem:e,errorCode:0,errorType:r.UploadErrorType.APPEND_BLOCK_MISSING_PARAMS,user:this.props.user}),new Error;let d;if(n.ActionsAdapter.emit("blockUploadStart",{blob:s,uploadItem:e}),i.windowHasCryptoSubtleDigest()){const o=yield function(e,s){return t.__awaiter(this,void 0,void 0,(function*(){let t;try{t=yield _(e)}catch(e){return a.error({type:r.UploadErrorType.FILE_READER_NULL_RESULT_ERROR},0)}const i=[];for(let e=0,s=0;e<t.byteLength;e+=f,s++)i[s]=t.slice(e,e+f);try{const e=yield Promise.all(i.map(s)),t=new Blob(e),o=yield _(t),r=yield s(o),n=Array.from(new Uint8Array(r)).map((e=>e.toString(16).padStart(2,"0"))).join("");return a.ok({hash:n})}catch(e){return a.error({type:r.UploadErrorType.CLIENT_HASH_DIGEST_ERROR},0)}}))}(s,i.encryptArrayBuffer);o.isError?n.ActionsAdapter.emit("error",{uploadItem:e,errorCode:0,errorType:r.UploadErrorType.CLIENT_HASH_DIGEST_ERROR,user:this.props.user}):d=o.result.hash}const h=Date.now(),c=t=>{const s=performance.now();u(t.loaded),n.ActionsAdapter.emit("uploadProgress",{uploadItem:e,requestStartTimestamp:h,lastProgressTimestamp:s})},p=l*L+s.size>=e.bytes,y={cursor:{session_id:e.sessionId,offset:l*L},close:p,content_hash:d};let U=0;const g=m.getUploadAbortController(),{shouldCancel:S,cleanupAborter:k}=g.getAbortSignal(e),{response:v,retryCount:b}=yield r.newPromiseWithRetries({promiseToTry:()=>function(e,s,i,n,l){var u;return t.__awaiter(this,void 0,void 0,(function*(){const t=new o.UserApiV2Client(new C({onProgress:n,abortSignal:l}));try{const o=yield _(s),r=yield t.ns("files").upload("upload_session/append_v2",e,o,{subjectUserId:i});return a.ok(r)}catch(e){return void 0!==(null===(u=e.error)||void 0===u?void 0:u[".tag"])?a.error(e.error,e.raw.status):"aborted"===e.raw.responseBody?a.ok(void 0):0===e.raw.status?a.error(E,0,{isRetriable:!0,maxRetries:r.NETWORK_RETRY_ATTEMPTS,isNetworkError:!0}):a.error(R,e.raw.status)}}))}(y,s,this.props.user.id,c,S)});if(k(),U+=b,v.isError)throw n.ActionsAdapter.emit("error",{uploadItem:e,errorType:n.convertApiV2LookupAndAppendErrors(v.error,r.UploadErrorType.UPLOAD_BLOCK_ERROR),user:this.props.user,totalRetryCount:U,errorMessage:v.error[".tag"],errorCode:v.errorCode}),new Error;g.wasUploadAborted(e.destPath)||(n.ActionsAdapter.emit("uploadProgress",{uploadItem:e,requestStartTimestamp:h,lastProgressTimestamp:performance.now()}),n.ActionsAdapter.emit("blockUploadEnd",{blob:s,totalRetryCount:U,uploadItem:e}))})),this.uploadBlock=(e,s,i,o)=>t.__awaiter(this,void 0,void 0,(function*(){const t=Date.now(),o=e.manualRetryCount,a=s=>{const r=performance.now();i&&i(s.loaded),e.manualRetryCount===o&&n.ActionsAdapter.emit("uploadProgress",{uploadItem:e,requestStartTimestamp:t,lastProgressTimestamp:r})};n.ActionsAdapter.emit("blockUploadStart",{blob:s,uploadItem:e});let l=0;const{response:u,retryCount:d}=yield r.newPromiseWithRetries({promiseToTry:()=>P(this.props.user.id,this.nsIdForRouting(e),e.bytes,s,a)});if(l+=d,u.isError)throw n.ActionsAdapter.emit("error",{uploadItem:e,errorType:u.error.type,user:this.props.user,errorCode:u.errorCode,errorMessage:u.error.message,errorMethodSource:u.error.method,totalRetryCount:l}),new Error;return n.ActionsAdapter.emit("blockUploadEnd",{blob:s,totalRetryCount:l,uploadItem:e}),u.result.token})),this.oneShotUploadFile=(e,s,i)=>t.__awaiter(this,void 0,void 0,(function*(){const l=Date.now(),u=e.manualRetryCount,d=t=>{const s=performance.now();i&&i(t.loaded),e.manualRetryCount===u&&n.ActionsAdapter.emit("uploadProgress",{uploadItem:e,requestStartTimestamp:l,lastProgressTimestamp:s})};n.ActionsAdapter.emit("blockUploadStart",{blob:s,uploadItem:e});let h=0;const c={path:o.normalize(r.getDestinationDir(e.parentPath||"",e.destPath))+o.normalize(o.filename(e.destPath)),mode:{".tag":"overwrite"}},p=m.getUploadAbortController(),{shouldCancel:f,cleanupAborter:y}=p.getAbortSignal(e),{response:R,retryCount:g}=yield r.newPromiseWithRetries({promiseToTry:()=>function(e,s,i,n,l){var u;return t.__awaiter(this,void 0,void 0,(function*(){const t=new o.UserApiV2Client(new C({onProgress:n,abortSignal:l}));try{const o=yield _(s),r=yield t.ns("files").upload("upload",e,o,{subjectUserId:i});return a.ok(r)}catch(e){return void 0!==(null===(u=e.error)||void 0===u?void 0:u[".tag"])?a.error(e.error,e.raw.status):"aborted"===e.raw.responseBody?a.ok({}):0===e.raw.status?a.error(E,0,{isRetriable:!0,maxRetries:r.NETWORK_RETRY_ATTEMPTS,isNetworkError:!0}):a.error(U,e.raw.status)}}))}(c,s,this.props.user.id,d,f)});y(),h+=g;const S=R;if(S.isError){const t=S.error;throw n.ActionsAdapter.emit("error",{uploadItem:e,errorType:t.type,user:this.props.user,errorCode:t.errorCode,errorMessage:t.message,errorMethodSource:t.method,totalRetryCount:h}),new Error}return p.wasUploadAborted(e.destPath)||n.ActionsAdapter.emit("blockUploadEnd",{blob:s,totalRetryCount:h,uploadItem:e}),S.result.id})),this.finishBatch=e=>t.__awaiter(this,void 0,void 0,(function*(){n.ActionsAdapter.emit("filesCommitting",{uploadItems:e.map((e=>e.info))});const s=[],i=[],l=[];e.forEach((e=>{e.info.sessionId&&(i.push({cursor:{session_id:e.info.sessionId,offset:0},commit:{mode:{".tag":"overwrite"},path:r.trimPathComponents(o.normalize(r.getDestinationDir(e.info.parentPath||"",e.info.destPath))+o.normalize(o.filename(e.info.destPath)))}}),l.push(e))}));const{response:u,retryCount:d}=yield r.newPromiseWithRetries({promiseToTry:()=>function(e,s){return t.__awaiter(this,void 0,void 0,(function*(){const t=new o.UserApiV2Client;try{const i=yield t.ns("files").rpc("upload_session/finish_batch_v2",e,{subjectUserId:s});return a.ok(i)}catch(e){return 0===e.raw.status?a.error(E,0,{isRetriable:!0,maxRetries:r.NETWORK_RETRY_ATTEMPTS,isNetworkError:!0}):a.error(R,e.raw.status)}}))}({entries:i,return_implicit_folder_metadata:!0},this.props.user.id)});if(u.isError){const t=u.errorCode;return e.map((({info:e})=>{n.ActionsAdapter.emit("error",{uploadItem:e,errorCode:t,errorType:r.UploadErrorType.COMMIT_HTTP_ERROR,user:this.props.user,totalRetryCount:d,useBatchCommit:!0}),s.push({filePath:e.destPath,success:!1})})),s}return u.result.entries.forEach(((e,t)=>{var i;const a=l[t];if("failure"===e[".tag"])n.ActionsAdapter.emit("error",{uploadItem:a.info,errorCode:0,errorType:n.convertApiV2CommitError(e),user:this.props.user,totalRetryCount:d,useBatchCommit:!0}),s.push({filePath:a.info.destPath,success:!1});else{const t=p.getPath(c.getStoreForUpload().getState()).toLowerCase(),l=o.parent_dir(e.path_lower||"")===t?e:void 0,h=!u.isError&&(null===(i=u.result.implicit_folder_metadata)||void 0===i?void 0:i.filter((t=>r.isAncestorOf(e.path_lower||"",t.path_lower||""))));n.ActionsAdapter.emit("fileUploaded",{uploadItem:a.info,totalRetryCount:d,useBatchCommit:!0,fileMetadata:l,folderMetadata:h||[]}),s.push({filePath:a.info.destPath,success:!0})}})),this.dequeuedItemIds.clear(),s})),this.finishOneShotUpload=e=>t.__awaiter(this,void 0,void 0,(function*(){n.ActionsAdapter.emit("filesCommitting",{uploadItems:e.map((e=>e.info))}),e.forEach((e=>{n.ActionsAdapter.emit("fileUploaded",{uploadItem:e.info,totalRetryCount:0,useBatchCommit:!1})}));const t=[];return e.forEach((e=>{t.push({filePath:e.info.destPath,success:!1})})),Promise.resolve(t)})),this.commitBlocksBatchAPIV2=e=>t.__awaiter(this,void 0,void 0,(function*(){if(n.ActionsAdapter.emit("filesCommitting",{uploadItems:e.map((e=>e.info))}),e.length>3){const t=e.map((({info:e,tokens:t})=>({file_name:o.filename(e.destPath),destination:r.getDestinationDir(e.parentPath||"",e.destPath),file_size:e.bytes,block_tokens:t,local_identifier:e.id})));let s=0;const{response:i,retryCount:a}=yield r.newPromiseWithRetries({promiseToTry:()=>T(this.props.user.id,t,e.map((e=>e.info)))});s+=a;const l=[];return i.isError?e.map((({info:e,tokens:t})=>{n.ActionsAdapter.emit("error",{uploadItem:e,errorCode:i.errorCode,errorType:i.error.type,user:this.props.user,errorMessage:i.error.message,errorMethodSource:i.error.method,totalRetryCount:s,useBatchCommit:!0}),l.push({filePath:e.destPath,success:!1})})):i.result.forEach((e=>{e.status.isError?(n.ActionsAdapter.emit("error",{uploadItem:e.uploadItem,errorCode:0,errorType:e.status.error.type,user:this.props.user,errorMessage:e.status.error.message,errorMethodSource:e.status.error.method,totalRetryCount:s,useBatchCommit:!0}),l.push({filePath:e.uploadItem.destPath,success:!1})):(n.ActionsAdapter.emit("fileUploaded",{uploadItem:e.uploadItem,totalRetryCount:s,useBatchCommit:!0}),l.push({filePath:e.uploadItem.destPath,success:!0}))})),Promise.resolve(l)}{const t=[];for(const{info:s,tokens:i}of e){let e=0;const{response:a,retryCount:l}=yield r.newPromiseWithRetries({promiseToTry:()=>b(this.props.user.id,r.getDestinationDir(s.parentPath||"",s.destPath),o.filename(s.destPath),s.bytes,i,this.props.user.root_ns_id,w(s))});e+=l,a.isError?(n.ActionsAdapter.emit("error",{uploadItem:s,errorCode:a.errorCode,errorType:a.error.type,user:this.props.user,errorMessage:a.error.message,errorMethodSource:a.error.method,totalRetryCount:e,useBatchCommit:!0}),t.push({filePath:s.destPath,success:!1})):(n.ActionsAdapter.emit("fileUploaded",{uploadItem:s,totalRetryCount:e,useBatchCommit:!0}),t.push({filePath:s.destPath,success:!0}))}return Promise.resolve(t)}}))}getSessionId(e){return t.__awaiter(this,void 0,void 0,(function*(){const t=yield e.sessionFetcher();if(t.isError)n.ActionsAdapter.emit("error",{user:this.props.user,uploadItem:e,errorCode:t.errorCode,errorType:r.UploadErrorType.START_UPLOAD_SESSION_ERROR,errorMessage:t.error[".tag"]});else{const s=t.result;e.sessionId=s[e.sessionIndex]}}))}render(){const e={schedulerType:"session",scheduler:O,append:this.appendBlock,finish:this.finishBatch,onUploadItemDequeue:this.onUploadItemDequeue},t={schedulerType:"hybrid",scheduler:N,append:this.appendBlock,finish:this.finishBatch,uploadBlock:this.uploadBlock,commitBlocksBatch:this.commitBlocksBatchAPIV2,onUploadItemDequeue:this.onUploadItemDequeue};this.appendBlock,this.finishBatch,this.oneShotUploadFile,this.finishOneShotUpload,this.onUploadItemDequeue;const i={schedulerType:"token",scheduler:B,uploadBlock:this.uploadBlock,commitBlocksBatch:this.commitBlocksBatchAPIV2,onUploadItemDequeue:this.onUploadItemDequeue},o=r.shouldUseHybridUploader()?r.shouldUseSessionUploader()?e:t:i;return s.React$1.createElement(d.UploadProvider,{userId:this.props.user.id,selectMultiple:!0,onChoose:this.props.onChoose,onChooseDropboxFile:this.props.onChooseDropboxFile,processFiles:this.processFiles,maxFileSize:r.shouldUseHybridUploader()?375809638400:524288e5,startUploadOnAdd:!0,scheduler:o},this.props.children)}}V.displayName="UploadKitProvider",e.UploadKitProvider=V}));
//# sourceMappingURL=c_file_uploader_upload_kit_provider.js-vflQ7QVEW.map
